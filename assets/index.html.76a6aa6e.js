import{_ as t,r as o,o as l,e as c,b as n,a as e,F as r,f as p,d as s}from"./app.93ef416d.js";const i={},u=p('<h1 id="php-8-2" tabindex="-1"><a class="header-anchor" href="#php-8-2" aria-hidden="true">#</a> PHP 8.2</h1><p>PHP 8.2 \u662F PHP \u8BED\u8A00\u7684\u91CD\u5927\u66F4\u65B0\u3002</p><p>\u5B83\u5305\u542B\u8BB8\u591A\u65B0\u529F\u80FD\uFF0C\u5305\u62EC\u53EA\u8BFB\u7C7B\u3001\u4F5C\u4E3A\u72EC\u7ACB\u7C7B\u578B\u7684 <code>null</code>\u3001<code>false</code> \u548C <code>true</code>\u3001\u5F03\u7528\u7684\u52A8\u6001\u5C5E\u6027\u3001\u6027\u80FD\u6539\u8FDB\u7B49\u3002</p><h2 id="\u65B0\u7684\u53EA\u8BFB\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u65B0\u7684\u53EA\u8BFB\u7C7B" aria-hidden="true">#</a> \u65B0\u7684\u53EA\u8BFB\u7C7B</h2>',4),k=s("PHP 8.1 \u5F15\u5165\u4E86 "),d={href:"https://www.php.net/manual/zh/language.oop5.properties.php#language.oop5.properties.readonly-properties",target:"_blank",rel:"noopener noreferrer"},b=s("readonly \u7C7B\u5C5E\u6027\u7684\u7279\u6027"),m=s("\u3002"),h=s("PHP 8.2 \u5DF2\u6DFB\u52A0\u5BF9\u5C06"),g={href:"https://www.php.net/manual/zh/language.oop5.basic.php#language.oop5.basic.class.readonly",target:"_blank",rel:"noopener noreferrer"},y=s("\u6574\u4E2A\u7C7B\u58F0\u660E\u4E3A readonly "),v=s("\u3002"),w=p(`<p>\u5982\u679C\u9700\u8981\u5C06\u4E00\u4E2A\u7C7B\u58F0\u660E\u4E3A <code>readonly</code>\uFF0C\u5B83\u7684\u6240\u6709\u5C5E\u6027\u5C06\u81EA\u52A8\u7EE7\u627F\u8BE5 <code>readonly</code> \u7279\u6027\u3002</p><p>\u56E0\u6B64\u58F0\u660E\u4E00\u4E2A\u7C7B <code>readonly</code> \u4E0E\u5C06\u6BCF\u4E2A\u7C7B\u5C5E\u6027\u58F0\u660E\u4E3A <code>readonly</code> \u76F8\u540C\uFF0C\u597D\u5904\u662F\u5F53\u6211\u4EEC\u660E\u786E\u67D0\u4E2A\u7C7B\u7684\u6240\u6709\u5C5E\u6027\u5747\u4E3A\u53EA\u8BFB\u7684\u8BDD\u5219\u53EF\u4EE5\u5C06\u7C7B\u5B9A\u4E49\u4E3A\u53EA\u8BFB\u7C7B\u3002</p><p>\u8FD9\u6837\u505A\u7684\u597D\u5904\u662F\uFF0C\u6BCF\u5F53\u6211\u4EEC\u6DFB\u52A0\u65B0\u5C5E\u6027\u65F6\uFF0C\u90FD\u4E0D\u7528\u5728\u5BF9\u5E94\u7C7B\u7684\u5C5E\u6027\u8BBE\u7F6E\u4E3A\u53EA\u8BFB\u3002</p><p>\u4F8B\u5982\uFF0C\u5728 PHP 8.1 \u4E2D\uFF0C\u9700\u8981\u5728\u6240\u6709\u7C7B\u5C5E\u6027\u4E0A\u6DFB\u52A0 <code>readonly</code> \u5173\u952E\u5B57\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">Post</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">readonly</span> <span class="token keyword type-declaration">string</span> <span class="token variable">$title</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">readonly</span> <span class="token keyword type-declaration">string</span> <span class="token variable">$user</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">readonly</span> <span class="token keyword type-declaration">string</span> <span class="token variable">$body</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">readonly</span> <span class="token class-name type-declaration">DateTime</span> <span class="token variable">$published_at</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u4F7F\u7528 PHP 8.2\uFF0C\u53EF\u4EE5\u8FD9\u6837\u5199\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">readonly</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">Post</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword type-declaration">string</span> <span class="token variable">$title</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword type-declaration">string</span> <span class="token variable">$user</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword type-declaration">string</span> <span class="token variable">$body</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name type-declaration">DateTime</span> <span class="token variable">$published_at</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8FD8\u53EF\u4EE5\u5C06\u62BD\u8C61\u7C7B\u6216\u6700\u7EC8\u7C7B\u58F0\u660E\u4E3A <code>readonly</code>\uFF0C\u5E76\u4E14 <code>readonly</code> \u5173\u952E\u5B57\u7684\u987A\u5E8F\u65E0\u5173\u7D27\u8981\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token comment">// \u5B9A\u4E49\u62BD\u8C61\u7C7B</span>
<span class="token keyword">abstract</span> <span class="token keyword">readonly</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">Post</span>
<span class="token punctuation">{</span>
    <span class="token comment">//</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5B9A\u4E49\u7EC8\u6781\u7C7B</span>
<span class="token keyword">final</span> <span class="token keyword">readonly</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">Post</span>
<span class="token punctuation">{</span>
    <span class="token comment">//</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>PHP \u5141\u8BB8\u58F0\u660E\u4E00\u4E2A <code>readonly</code> \u4F46\u6CA1\u6709\u5C5E\u6027\u7684\u7C7B\uFF0C\u8FD9\u53EF\u4EE5\u9632\u6B62\u52A8\u6001\u5C5E\u6027\uFF0C\u540C\u65F6\u4ECD\u7136\u5141\u8BB8\u5B50\u7C7B <code>readonly</code> \u663E\u5F0F\u58F0\u660E\u5B83\u4EEC\u7684\u5C5E\u6027\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token comment">// 1. \u58F0\u660E\u4E00\u4E2A\u6CA1\u6709\u4EFB\u4F55\u5C5E\u6027\u7684\u53EA\u8BFB\u7C7B</span>
<span class="token keyword">readonly</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">Team</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

<span class="token comment">// 2. \u7EE7\u627F\u81EA\u53EA\u8BFB\u7C7B\u7684\u5B50\u7C7B\u53EF\u4EE5\u91CD\u65B0\u5B9A\u4E49\u53EA\u8BFB\u5C5E\u6027</span>
<span class="token keyword">readonly</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">Person</span> <span class="token keyword">extends</span> <span class="token class-name">Team</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token keyword">public</span> <span class="token keyword type-declaration">string</span> <span class="token variable">$name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>readonly</code> \u7C7B\u53EA\u80FD\u5305\u542B\u7C7B\u578B\u5316\u5C5E\u6027\uFF0C\u8FD9\u4E0E\u58F0\u660E\u5355\u4E2A\u53EA\u8BFB\u5C5E\u6027\u7684\u89C4\u5219\u76F8\u540C\u3002</p><p>\u5C1D\u8BD5\u58F0\u660E\u4E00\u4E2A <code>readonly</code> \u6CA1\u6709\u6307\u5B9A\u7C7B\u578B\u7684\u5C5E\u6027\u7684\u7C7B\u5C06\u5BFC\u81F4\u81F4\u547D\u9519\u8BEF\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">readonly</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">Type</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token keyword">public</span> <span class="token keyword type-declaration">string</span> <span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token keyword">public</span> <span class="token variable">$age</span><span class="token punctuation">)</span> <span class="token comment">// PHP Fatal error:  Readonly property Type::$age must have type in ... on line 5</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6B64\u5916\uFF0C\u67D0\u4E9B PHP \u529F\u80FD\u58F0\u660E\u4E0D\u80FD\u4F7F\u7528 <code>readonly</code> \u5173\u952E\u5B57\u4FEE\u9970\uFF0C\u5B83\u4EEC\u5206\u522B\u662F\uFF1A</p><ul><li>\u679A\u4E3E <code>enum</code> \uFF08\u56E0\u4E3A\u5B83\u4E0D\u80FD\u5305\u542B\u4EFB\u4F55\u5C5E\u6027\uFF09</li><li><code>Trait</code></li><li>\u63A5\u53E3 <code>Interface</code></li></ul><p>\u5728 PHP 8.2 \u4E2D\u5C1D\u8BD5\u58F0\u660E\u8FD9\u4E9B\u529F\u80FD\u4E2D\u7684\u4EFB\u4F55\u4E00\u4E2A <code>readonly</code> \u90FD\u5C06\u5BFC\u81F4\u89E3\u6790\u9519\u8BEF\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">readonly</span> <span class="token keyword">interface</span> <span class="token class-name-definition class-name">Filesystem</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// Parse error: syntax error, unexpected token &quot;interface&quot;, expecting &quot;abstract&quot; or &quot;final&quot; or &quot;readonly&quot; or &quot;class&quot;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u4E0E\u6240\u6709 PHP \u5173\u952E\u5B57\u4E00\u6837\uFF0C<code>readonly</code> \u5173\u952E\u5B57\u4E0D\u533A\u5206\u5927\u5C0F\u5199\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">ReadOnly</span> <span class="token keyword">class</span>  <span class="token class-name-definition class-name">Person</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token comment">// readonly \u5173\u952E\u5B57\u4E0D\u533A\u5206\u5927\u5C0F\u5199</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5BF9 <code>readonly</code> \u7C7B\u52A8\u6001\u6DFB\u52A0\u5C5E\u6027\u4F1A\u5BFC\u81F4\u81F4\u547D\u9519\u8BEF\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">readonly</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">Person</span>
<span class="token punctuation">{</span>

<span class="token punctuation">}</span>

<span class="token variable">$person</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">;</span>

<span class="token variable">$person</span><span class="token operator">-&gt;</span><span class="token property">name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Curder&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Fatal error: Uncaught Error: Cannot create dynamic property Person::$name</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u6790\u53D6\u8303\u5F0F-dnf-\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6790\u53D6\u8303\u5F0F-dnf-\u7C7B\u578B" aria-hidden="true">#</a> \u6790\u53D6\u8303\u5F0F (DNF) \u7C7B\u578B</h2>`,23),f=s("PHP 8.2 \u652F\u6301\u4E0D\u76F8\u4EA4\u8303\u5F0F (DNF) \u7C7B\u578B\u2014\u2014\u73B0\u5728\u53EF\u4EE5\u7EC4\u5408"),_={href:"https://php.watch/versions/8.0/union-types",target:"_blank",rel:"noopener noreferrer"},q=s("\u8054\u5408\u7C7B\u578B (PHP 8.0)"),P=s(" \u548C"),x={href:"https://php.watch/versions/8.1/intersection-types",target:"_blank",rel:"noopener noreferrer"},$=s("\u4EA4\u96C6\u7C7B\u578B (PHP 8.1)"),F=s("\uFF0C\u4ECE\u800C\u53EF\u4EE5\u58F0\u660E\u7CBE\u786E\u4E14\u5BCC\u6709\u8868\u73B0\u529B\u7684\u53C2\u6570\u3001\u8FD4\u56DE\u548C\u5C5E\u6027\u7C7B\u578B\u3002"),H=s("DNF\u7C7B\u578B\u5141\u8BB8\u6211\u4EEC\u7ED3\u5408"),T={href:"https://www.php.net/manual/zh/language.types.type-system.php#language.types.type-system.composite.union",target:"_blank",rel:"noopener noreferrer"},C=s("\u5E76\u96C6"),D=s(" \u548C"),N={href:"https://www.php.net/manual/zh/language.types.type-system.php#language.types.type-system.composite.intersection",target:"_blank",rel:"noopener noreferrer"},M=s("\u4EA4\u96C6"),z=s(" \u7C7B\u578B\uFF0C\u9075\u5FAA\u4E00\u4E2A\u4E25\u683C\u7684\u89C4\u5219\uFF1A\u5F53\u7ED3\u5408\u5E76\u96C6\u548C\u4EA4\u96C6\u7C7B\u578B\u65F6\uFF0C\u4EA4\u96C6\u7C7B\u578B\u5FC5\u987B\u7528\u62EC\u53F7\u5206\u7EC4\u3002"),S=p(`<p>\u6BD4\u5982\u5982\u4E00\u4E0B\u51FD\u6570\u5B9A\u4E49\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">function</span> <span class="token function-definition function">generateSlug</span><span class="token punctuation">(</span><span class="token punctuation">(</span>HasTitle<span class="token operator">&amp;</span>HasId<span class="token punctuation">)</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span> <span class="token variable">$post</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$post</span> <span class="token operator">===</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token operator">-&gt;</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token variable">$post</span><span class="token operator">-&gt;</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u5141\u8BB8null\u3001false\u548Ctrue\u4F5C\u4E3A\u72EC\u7ACB\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5141\u8BB8null\u3001false\u548Ctrue\u4F5C\u4E3A\u72EC\u7ACB\u7C7B\u578B" aria-hidden="true">#</a> \u5141\u8BB8<code>null</code>\u3001<code>false</code>\u548C<code>true</code>\u4F5C\u4E3A\u72EC\u7ACB\u7C7B\u578B</h2><p>PHP 8.2 \u6DFB\u52A0\u4E86\u4E09\u79CD\u65B0\u7C7B\u578B\uFF0C\u5B83\u4EEC\u5206\u522B\u662F<code>null</code>\u3001<code>false</code> \u548C <code>true</code>\u3002</p><p>\u5E38\u89C1\u7684\u4F8B\u5B50\u662F PHP \u7684\u5185\u7F6E\u51FD\u6570\uFF0C\u5176\u4E2D <code>false</code> \u7528\u4F5C\u53D1\u751F\u9519\u8BEF\u65F6\u7684\u8FD4\u56DE\u7C7B\u578B\u3002</p><p>\u4F8B\u5982\u5728 <code>file_get_contents</code>\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token comment">/* \u2026 */</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token operator">|</span><span class="token keyword type-declaration">false</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5728 PHP 8.2 \u4E4B\u524D\uFF0C\u5DF2\u7ECF\u53EF\u4EE5\u5C06 <code>null</code> \u8DDF\u5176\u4ED6\u7C7B\u578B\u4F5C\u4E3A\u8054\u5408\u4F7F\u7528\uFF1B</p><p>\u4F46\u73B0\u5728\u5B83\u4E5F\u53EF\u4EE5\u7528\u4F5C\u72EC\u7ACB\u7C7B\u578B\uFF0C\u4F8B\u5982\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">function</span> <span class="token function-definition function">alwaysReturnNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">null</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token constant">null</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u73B0\u5728\u540C\u6837\u9002\u7528\u4E8E <code>true</code> \u6216\u8005 <code>false</code>\u3002</p><h2 id="\u65B0\u7684\u968F\u673A\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#\u65B0\u7684\u968F\u673A\u6269\u5C55" aria-hidden="true">#</a> \u65B0\u7684\u968F\u673A\u6269\u5C55</h2><p>PHP 8.2 \u5185\u7F6E\u4E86\u4E00\u4E2A\u968F\u673A\u7C7B <code>Randomizer</code>\uFF0C\u5B83\u589E\u52A0\u4E86\u4E00\u79CD\u66F4\u9002\u5408\u9762\u5411\u5BF9\u8C61\u7684\u65B9\u5F0F\u6765\u5904\u7406\u968F\u673A\u6570\u751F\u6210\u548C\u5176\u4ED6\u968F\u673A\u5316\u64CD\u4F5C\u3002</p><p>\u53EF\u4EE5\u4F7F\u7528\u6B64\u7279\u6027\u6765\u6253\u4E71\u5B57\u7B26\u4E32\u6216\u8005\u6253\u4E71\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5728\u6307\u5B9A\u7684\u6570\u503C\u8303\u56F4\u83B7\u53D6\u968F\u673A\u6570\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Random<span class="token punctuation">\\</span>Randomizer</span><span class="token punctuation">;</span>

<span class="token variable">$randomizer</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Randomizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53C2\u6570\u63A5\u6536\u4E00\u4E2Aengine, \u5206\u522B\u662F Mt19937\uFF0CPcgOneseq128XslRr64\uFF0CXoshiro256StarStar \u548C Secure</span>

<span class="token keyword">echo</span> <span class="token variable">$randomizer</span><span class="token operator">-&gt;</span><span class="token function">shuffleBytes</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;hello world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// eh wdolroll</span>

<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$randomizer</span><span class="token operator">-&gt;</span><span class="token function">shuffleArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;d&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;a&quot;, &quot;b&quot;, &quot;d&quot;, &quot;c&quot;]</span>

<span class="token keyword">echo</span> <span class="token variable">$randomizer</span><span class="token operator">-&gt;</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 73</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><code>Randomizer</code> \u7C7B\u63A5\u53D7\u4E00\u4E2A\u968F\u673A\u53D1\u751F\u5668\u5F15\u64CE\uFF0C\u53EF\u4EE5\u6839\u636E\u9700\u8981\u66F4\u6539\u8BE5\u5F15\u64CE\u3002 \u4F8B\u5982\u533A\u5206\u751F\u4EA7\u73AF\u5883\u548C\u6D4B\u8BD5\u73AF\u5883\u751F\u6210\u968F\u673A\u6570\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$is_production</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>

<span class="token variable">$rng</span> <span class="token operator">=</span> <span class="token variable">$is_production</span>
    <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified">Random<span class="token punctuation">\\</span>Engine<span class="token punctuation">\\</span>Secure</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified">Random<span class="token punctuation">\\</span>Engine<span class="token punctuation">\\</span>Mt19937</span><span class="token punctuation">(</span><span class="token number">1234</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$randomizer</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified">Random<span class="token punctuation">\\</span>Randomizer</span><span class="token punctuation">(</span><span class="token variable">$rng</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">get_class</span><span class="token punctuation">(</span><span class="token variable">$randomizer</span><span class="token operator">-&gt;</span><span class="token property">engine</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Random\\Engine\\Mt19937</span>

<span class="token keyword">echo</span> <span class="token variable">$randomizer</span><span class="token operator">-&gt;</span><span class="token function">shuffleBytes</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;\\n&quot;</span><span class="token punctuation">;</span> <span class="token comment">// lhloe</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><blockquote><p>\u5F53\u4F7F\u7528 <code>Mt19937</code> \u5F15\u64CE\u4E3A\u79CD\u5B50\u8BBE\u7F6E\u503C\u65F6\uFF0C\u968F\u673A\u751F\u6210\u7684\u503C\u6BCF\u6B21\u90FD\u662F\u76F8\u540C\u7684\u3002</p></blockquote><h2 id="\u5728-const-\u8868\u8FBE\u5F0F\u4E2D\u83B7\u53D6\u679A\u4E3E\u7684\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5728-const-\u8868\u8FBE\u5F0F\u4E2D\u83B7\u53D6\u679A\u4E3E\u7684\u5C5E\u6027" aria-hidden="true">#</a> \u5728 const \u8868\u8FBE\u5F0F\u4E2D\u83B7\u53D6\u679A\u4E3E\u7684\u5C5E\u6027</h2><p>\u6B64\u5EFA\u8BAE\u5141\u8BB8\u4F7F\u7528 <code>-&gt;</code> \u6216 <code>?-&gt;</code> \u6765\u83B7\u53D6\u5E38\u91CF\u8868\u8FBE\u5F0F\u4E2D\u679A\u4E3E\u7684\u5C5E\u6027\u3002</p><p>\u6B64\u66F4\u6539\u7684\u4E3B\u8981\u52A8\u673A\u662F\u5141\u8BB8\u5728\u4E0D\u5141\u8BB8\u679A\u4E3E\u5BF9\u8C61\u7684\u5730\u65B9\u83B7\u53D6\u540D\u79F0\u548C\u503C\u5C5E\u6027\uFF0C\u4F8B\u5982\u6570\u7EC4\u952E\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">enum</span> <span class="token class-name-definition class-name">A</span><span class="token punctuation">:</span> <span class="token keyword type-declaration">string</span> 
<span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token constant">B</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;B&#39;</span><span class="token punctuation">;</span>
    
    <span class="token keyword">const</span> <span class="token constant">C</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">B</span><span class="token operator">-&gt;</span><span class="token property">value</span> <span class="token operator">=&gt;</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">B</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="trait\u4E2D\u7684\u5E38\u91CF" tabindex="-1"><a class="header-anchor" href="#trait\u4E2D\u7684\u5E38\u91CF" aria-hidden="true">#</a> Trait\u4E2D\u7684\u5E38\u91CF</h2><p>PHP \u5305\u542B\u4E00\u79CD\u91CD\u7528\u4EE3\u7801\u7684\u65B9\u6CD5\uFF0C\u79F0\u4E3A <code>Trait</code>\uFF0C\u5B83\u975E\u5E38\u9002\u5408\u8DE8\u7C7B\u7684\u4EE3\u7801\u91CD\u7528\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">trait</span> <span class="token class-name-definition class-name">Foo</span> 
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">const</span> <span class="token constant">CONSTANT</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">int</span> 
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">CONSTANT</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u6211\u4EEC\u65E0\u6CD5\u901A\u8FC7 Trait \u540D\u79F0\u8BBF\u95EE\u8FD9\u4E2A\u5E38\u91CF\uFF0C\u65E0\u8BBA\u662F\u4ECE Trait \u5916\u90E8\u8FD8\u662F\u4ECE Trait \u5185\u90E8\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">trait</span> <span class="token class-name-definition class-name">Foo</span> 
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">const</span> <span class="token constant">CONSTANT</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">int</span> 
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name static-context">Foo</span><span class="token operator">::</span><span class="token constant">CONSTANT</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name static-context">Foo</span><span class="token operator">::</span><span class="token constant">CONSTANT</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u4F46\u662F\u53EF\u4EE5\u901A\u8FC7\u4F7F\u7528 Trait \u7684\u7C7B\u6765\u8BBF\u95EE\u5E38\u91CF\uFF0C\u524D\u63D0\u662F\u5728 Trait \u4E2D\u5B9A\u4E49\u7684\u5E38\u91CF\u662F\u516C\u5171\u7684\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">MyClass</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">Foo</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">echo</span> <span class="token class-name static-context">MyClass</span><span class="token operator">::</span><span class="token constant">CONSTANT</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="\u9690\u53BB\u56DE\u6EAF\u4E2D\u7684\u654F\u611F\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u9690\u53BB\u56DE\u6EAF\u4E2D\u7684\u654F\u611F\u53C2\u6570" aria-hidden="true">#</a> \u9690\u53BB\u56DE\u6EAF\u4E2D\u7684\u654F\u611F\u53C2\u6570</h2><p>PHP\u5141\u8BB8\u60A8\u5728\u51FA\u73B0\u95EE\u9898\u65F6\u67E5\u770B\u5806\u6808\u8DDF\u8E2A\u4EE5\u53CA\u4E0E\u6BCF\u4E2A\u5806\u6808\u5E27\u5173\u8054\u7684\u6240\u6709\u53C2\u6570\u3002\u8FD9\u5BF9\u8C03\u8BD5\u975E\u5E38\u6709\u5E2E\u52A9\u3002</p><p>\u4F46\u5BF9\u654F\u611F\u6570\u636E\u6765\u8BF4\u53EF\u80FD\u662F\u707E\u96BE\u6027\u7684\uFF0C\u8FD9\u4E9B\u5806\u6808\u8DDF\u8E2A\u53EF\u80FD\u5305\u542B\u654F\u611F\u4FE1\u606F\uFF0C\u4F8B\u5982\u73AF\u5883\u53D8\u91CF\u3001\u5BC6\u7801\u6216\u7528\u6237\u540D\u3002</p><p>\u5047\u8BBE\u60A8\u7684\u767B\u5F55\u51FD\u6570\u4E2D\u5B58\u5728\u5BC6\u7801\uFF0C\u5BC6\u7801\u73B0\u5728\u5305\u542B\u5728\u7531\u5F02\u5E38\u521B\u5EFA\u7684\u5806\u6808\u8DDF\u8E2A\u4E2D\u3002</p><p>PHP 8.2 \u5141\u8BB8\u4F7F\u7528 <code>#[SensitiveParameter]</code> \u5C5E\u6027\u6807\u8BB0\u6B64\u7C7B\u201C\u654F\u611F\u53C2\u6570\u201D\uFF0C\u8FD9\u6837\u5C31\u4E0D\u5FC5\u62C5\u5FC3\u5728\u51FA\u73B0\u95EE\u9898\u65F6\u5B83\u4EEC\u4F1A\u88AB\u5217\u5728\u5806\u6808\u8DDF\u8E2A\u4E2D\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">function</span> <span class="token function-definition function">login</span><span class="token punctuation">(</span>
    <span class="token keyword type-hint">string</span>                       <span class="token variable">$name</span><span class="token punctuation">,</span>
    <span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">SensitiveParameter</span></span><span class="token delimiter punctuation">]</span></span> <span class="token keyword type-declaration">string</span> <span class="token variable">$password</span>
<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Whoops!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">login</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;curder&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;secret&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/*
PHP Fatal error:  Uncaught Exception: Whoops! in playground.php:8
Stack trace:
#0 playground.php(11): login(&#39;curder&#39;, Object(SensitiveParameterValue))
#1 {main}
  thrown in playground.php on line 8
*/</span>
</span></code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="datetime-\u66F4\u6539" tabindex="-1"><a class="header-anchor" href="#datetime-\u66F4\u6539" aria-hidden="true">#</a> DateTime \u66F4\u6539</h2><p>\u5728 PHP 8.2 \u4E2D\uFF0C\u8FD9\u4E9B\u65B9\u6CD5\u8FD4\u56DE\u503C\u7C7B\u578B\u66F4\u6539\u5982\u4E0B\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token class-name static-context">DateTime</span><span class="token operator">::</span><span class="token function">createFromImmutable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">static</span>
<span class="token class-name static-context">DateTimeImmutable</span><span class="token operator">::</span><span class="token function">createFromMutable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">static</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4E4B\u524D\u7684\u8FD4\u56DE\u503C\u4E3A <code>DateTime</code> \u548C <code>DateTimeImmutable</code>\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token class-name static-context">DateTime</span><span class="token operator">::</span><span class="token function">createFromImmutable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">DateTime</span><span class="token punctuation">;</span>
<span class="token class-name static-context">DateTimeImmutable</span><span class="token operator">::</span><span class="token function">createFromMutable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">DateTimeImmutable</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="\u5F03\u7528-utf8-encode-\u548Cutf8-decode" tabindex="-1"><a class="header-anchor" href="#\u5F03\u7528-utf8-encode-\u548Cutf8-decode" aria-hidden="true">#</a> \u5F03\u7528 utf8_encode()\u548Cutf8_decode()</h2><p>PHP 8.2\u5F03\u7528\u4E86 <code>utf8_encode()</code> \u548C <code>utf8_decode()</code> \u51FD\u6570\u3002</p><p>\u5982\u679C\u8C03\u7528\u5B83\u4EEC\uFF0C\u4F1A\u770B\u5230\u8FD9\u4E9B\u5F03\u7528\u901A\u77E5\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>Deprecated<span class="token punctuation">:</span> <span class="token keyword">Function</span> <span class="token function-definition function">utf8_encode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> is deprecated
Deprecated<span class="token punctuation">:</span> <span class="token keyword">Function</span> <span class="token function-definition function">utf8_decode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> is deprecated
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5EFA\u8BAE\u6539\u7528 <code>mb_convert_encoding()</code>\u3002</p><h2 id="\u5F03\u7528\u52A8\u6001\u5C5E\u6027-\u548C\u65B0\u7684-allowdynamicproperties-\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5F03\u7528\u52A8\u6001\u5C5E\u6027-\u548C\u65B0\u7684-allowdynamicproperties-\u5C5E\u6027" aria-hidden="true">#</a> \u5F03\u7528\u52A8\u6001\u5C5E\u6027\uFF08\u548C\u65B0\u7684#[AllowDynamicProperties] \u5C5E\u6027\uFF09</h2><p>\u52A8\u6001\u5C5E\u6027\u5728 PHP 8.2 \u4E2D\u88AB\u5F03\u7528\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">Post</span>
<span class="token punctuation">{</span>
    <span class="token comment">//</span>
<span class="token punctuation">}</span>

<span class="token variable">$post</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Post</span><span class="token punctuation">;</span>

<span class="token variable">$post</span><span class="token operator">-&gt;</span><span class="token property">title</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Hello world&#39;</span><span class="token punctuation">;</span> <span class="token comment">// PHP Deprecated:  Creation of dynamic property Post::$title is deprecate</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5F53\u5B9E\u73B0\u9B54\u6CD5 <code>__get()</code> \u6216 <code>__set()</code> \u65B9\u6CD5\u65F6\uFF0C\u83B7\u53D6\u548C\u8BBE\u7F6E\u5BF9\u8C61\u7684\u52A8\u6001\u5C5E\u6027\u4ECD\u7136\u6709\u6548\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">Post</span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword type-declaration">array</span> <span class="token variable">$properties</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__set</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token keyword type-hint">mixed</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">properties</span><span class="token punctuation">[</span><span class="token variable">$name</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token variable">$post</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Post</span><span class="token punctuation">;</span>

<span class="token variable">$post</span><span class="token operator">-&gt;</span><span class="token property">title</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Hello world&#39;</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u4E5F\u53EF\u4EE5\u901A\u8FC7\u5C06 <code>[#AllowDynamicProperties]</code> \u5C5E\u6027\u6DFB\u52A0\u5230\u7C7B\u5B9A\u4E49\u524D\u6765\u542F\u7528\u52A8\u6001\u5C5E\u6027\u7684\u529F\u80FD\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">AllowDynamicProperties</span></span><span class="token delimiter punctuation">]</span></span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">Post</span>
<span class="token punctuation">{</span>
    <span class="token comment">//</span>
<span class="token punctuation">}</span>

<span class="token variable">$post</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Post</span><span class="token punctuation">;</span>

<span class="token variable">$post</span><span class="token operator">-&gt;</span><span class="token property">title</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Hello world&#39;</span><span class="token punctuation">;</span>
</span></code></pre><div class="highlight-lines"><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u6700\u540E\uFF0C\u53EA\u8BFB\u7C7B\u6C38\u8FDC\u4E0D\u80FD\u6709\u52A8\u6001\u5C5E\u6027\u3002\u5C06 <code>[#AllowDynamicProperties]</code> \u5C5E\u6027\u6DFB\u52A0\u5230\u53EA\u8BFB\u7C7B\u5C06\u5BFC\u81F4\u9519\u8BEF\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

#<span class="token punctuation">[</span>AllowDynamicProperties<span class="token punctuation">]</span> <span class="token comment">// PHP Fatal error:  Cannot apply #[AllowDynamicProperties] to readonly class Post in ... on line 4</span>
<span class="token keyword">readonly</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">Post</span>
<span class="token punctuation">{</span>
    <span class="token comment">//</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u5F03\u7528\u5B57\u7B26\u4E32\u63D2\u503C" tabindex="-1"><a class="header-anchor" href="#\u5F03\u7528\u5B57\u7B26\u4E32\u63D2\u503C" aria-hidden="true">#</a> \u5F03\u7528\u5B57\u7B26\u4E32\u63D2\u503C</h2><p>PHP \u6709\u51E0\u79CD\u5728\u5B57\u7B26\u4E32\u4E2D\u5D4C\u5165\u53D8\u91CF\u7684\u65B9\u6CD5\u3002PHP 8.2 \u5F03\u7528\u4E86\u4E24\u79CD\u8FD9\u6837\u505A\u7684\u65B9\u5F0F\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u5F88\u5C11\u4F7F\u7528\uFF0C\u5E76\u4E14\u7ECF\u5E38\u5BFC\u81F4\u6DF7\u6DC6\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">const</span> <span class="token constant">world</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;world&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$world</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;world&#39;</span><span class="token punctuation">;</span>

<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Hello \${world}!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Hello \${(world)}!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u4E0B\u9762\u7684\u4E24\u79CD\u6D41\u884C\u7684\u5B57\u7B26\u4E32\u63D2\u503C\u65B9\u5F0F\u4ECD\u7136\u6709\u6548\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Hello <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$world</span><span class="token punctuation">}</span></span>!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Hello <span class="token interpolation"><span class="token variable">$world</span></span>!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="\u5F03\u7528\u90E8\u5206\u652F\u6301\u7684-callable" tabindex="-1"><a class="header-anchor" href="#\u5F03\u7528\u90E8\u5206\u652F\u6301\u7684-callable" aria-hidden="true">#</a> \u5F03\u7528\u90E8\u5206\u652F\u6301\u7684 Callable</h2><p>PHP 8.2 \u5F03\u7528\u4E86\u4E00\u4E9B\u53EF\u8C03\u7528\u7684\u8BED\u6CD5\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u4E0D\u4E00\u81F4\u3002\u8FD9\u4E9B\u8BED\u6CD5\u53EF\u4EE5\u4E0E callable \u7C7B\u578B\u3001\u51FD\u6570 <code>is_callable()</code> \u548C <code>call_user_func()</code> \u4E00\u8D77\u4F7F\u7528\u3002</p><ul><li>\u4E0D\u53EF\u7528</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token string double-quoted-string">&quot;self::method&quot;</span>
<span class="token string double-quoted-string">&quot;parent::method&quot;</span>
<span class="token string double-quoted-string">&quot;static::method&quot;</span>
<span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;self&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;method&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;parent&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;method&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;static&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;method&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;Foo&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Bar::method&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Bar::method&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>\u53EF\u7528</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token string single-quoted-string">&#39;strlen&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;MyClass&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;myMethod&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token string single-quoted-string">&#39;MyClass::myMethod&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Closure</span><span class="token operator">::</span><span class="token function">fromCallable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">MyClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;myMethod&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">strlen</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token variable">$this</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;myMethod&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u793A\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">Foo</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
<span class="token comment">//        var_dump(is_callable([$this, &#39;bar&#39;]));</span>
<span class="token comment">//        var_dump(is_callable(&quot;self::bar&quot;));</span>
<span class="token comment">//        var_dump(is_callable(&#39;static::bar&#39;));</span>
<span class="token comment">//        var_dump(is_callable([&quot;self&quot;, &quot;bar&quot;]));</span>
<span class="token comment">//        var_dump(is_callable([&quot;static&quot;, &quot;bar&quot;]));</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">myMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">subFoo</span> <span class="token keyword">extends</span> <span class="token class-name">Foo</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        var_dump(is_callable(&#39;parent::bar&#39;));</span>
<span class="token comment">//        var_dump(is_callable([&quot;parent&quot;, &quot;bar&quot;]));</span>
<span class="token comment">//        var_dump(is_callable([&#39;Foo&#39;, &quot;Foo::bar&quot;]));</span>
<span class="token comment">//        var_dump(is_callable([new Foo(), &quot;Foo::bar&quot;]));</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u53EF\u7528</span>
<span class="token comment">// var_dump(is_callable(&#39;strlen&#39;));</span>
<span class="token comment">// var_dump(is_callable([&#39;Foo&#39;, &#39;bar&#39;]));</span>
<span class="token comment">// var_dump(is_callable([Foo::class, &#39;bar&#39;]));</span>
<span class="token comment">// var_dump(is_callable(Closure::fromCallable(...)));</span>
<span class="token comment">// var_dump(is_callable([new Foo(), &#39;myMethod&#39;]));</span>
<span class="token comment">// var_dump(is_callable(strlen(...)));</span>
<span class="token comment">// new Foo(); // is_callable([$this, &#39;myMethod&#39;])</span>

<span class="token comment">// \u4E0D\u53EF\u7528</span>
<span class="token comment">// new Foo(); // is_callable(&quot;self::bar&quot;)</span>
<span class="token comment">// new Foo(); // is_callable(&#39;static::bar&#39;)</span>
<span class="token comment">// new Foo(); // is_callable([&quot;self&quot;, &quot;bar&quot;])</span>
<span class="token comment">// new Foo(); // is_callable([&quot;static&quot;, &quot;bar&quot;])</span>
<span class="token comment">// new subFoo(); // is_callable(&#39;parent::bar&#39;)</span>
<span class="token comment">// new subFoo(); // is_callable([&quot;parent&quot;, &quot;bar&quot;])</span>
<span class="token comment">// new subFoo(); // is_callable([&#39;Foo&#39;, &quot;Foo::bar&quot;])</span>
<span class="token comment">// new subFoo(); // is_callable([new Foo(), &quot;Foo::bar&quot;])</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><h2 id="\u6269\u5C55\u9605\u8BFB" tabindex="-1"><a class="header-anchor" href="#\u6269\u5C55\u9605\u8BFB" aria-hidden="true">#</a> \u6269\u5C55\u9605\u8BFB</h2>`,68),A={href:"https://www.php.net/releases/8.2/zh.php",target:"_blank",rel:"noopener noreferrer"},R=s("PHP 8.2 - php.net"),I={href:"https://kinsta.com/blog/php-8-2/",target:"_blank",rel:"noopener noreferrer"},B=s("What\u2019s New in PHP 8.2 \u2014 New Features, Deprecations, Changes, and More"),E={href:"https://php.watch/versions/8.2",target:"_blank",rel:"noopener noreferrer"},O=s("PHP 8.2: What's New and Changed"),V={href:"https://stitcher.io/blog/new-in-php-82",target:"_blank",rel:"noopener noreferrer"},W=s("What's new in PHP 8.2"),L={href:"https://www.myfreax.com/new-features-in-php-8-2-released/",target:"_blank",rel:"noopener noreferrer"},U=s("PHP 8.2\u5DF2\u53D1\u5E03\u6240\u6709\u65B0\u7279\u6027\u6982\u89C8");function X(j,G){const a=o("ExternalLinkIcon");return l(),c(r,null,[u,n("p",null,[k,n("a",d,[b,e(a)]),m]),n("p",null,[h,n("a",g,[y,e(a)]),v]),w,n("p",null,[f,n("a",_,[q,e(a)]),P,n("a",x,[$,e(a)]),F]),n("p",null,[H,n("a",T,[C,e(a)]),D,n("a",N,[M,e(a)]),z]),S,n("ul",null,[n("li",null,[n("a",A,[R,e(a)])]),n("li",null,[n("a",I,[B,e(a)])]),n("li",null,[n("a",E,[O,e(a)])]),n("li",null,[n("a",V,[W,e(a)])]),n("li",null,[n("a",L,[U,e(a)])])])],64)}var K=t(i,[["render",X],["__file","index.html.vue"]]);export{K as default};
