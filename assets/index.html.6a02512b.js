import{_ as t,r as e,o,e as c,b as n,a as l,F as u,f as s,d as a}from"./app.3f743459.js";const i={},r=s(`<h1 id="php-7-1" tabindex="-1"><a class="header-anchor" href="#php-7-1" aria-hidden="true">#</a> PHP 7.1</h1><h2 id="\u53EF\u4E3A\u7A7A-nullable-\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u53EF\u4E3A\u7A7A-nullable-\u7C7B\u578B" aria-hidden="true">#</a> \u53EF\u4E3A\u7A7A\uFF08Nullable\uFF09\u7C7B\u578B</h2><p>\u53C2\u6570\u4EE5\u53CA\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\u73B0\u5728\u53EF\u4EE5\u901A\u8FC7\u5728\u7C7B\u578B\u524D\u52A0\u4E0A\u4E00\u4E2A\u95EE\u53F7\u4F7F\u4E4B\u5141\u8BB8\u4E3A\u7A7A\u3002</p><p>\u5F53\u542F\u7528\u8FD9\u4E2A\u7279\u6027\u65F6\uFF0C\u4F20\u5165\u7684\u53C2\u6570\u6216\u8005\u51FD\u6570\u8FD4\u56DE\u7684\u7ED3\u679C\u8981\u4E48\u662F\u7ED9\u5B9A\u7684\u7C7B\u578B\uFF0C\u8981\u4E48\u662F null \u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">function</span> <span class="token function-definition function">testReturn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token operator">?</span><span class="token keyword return-type">string</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;elePHPant&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">testReturn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string(10) &quot;elePHPant&quot;</span>

<span class="token keyword">function</span> <span class="token function-definition function">testReturn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token operator">?</span><span class="token keyword return-type">string</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token constant">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">testReturn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NULL</span>

<span class="token keyword">function</span> <span class="token function-definition function">test</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token keyword type-hint">string</span> <span class="token variable">$name</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;elePHPant&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string(10) &quot;elePHPant&quot; </span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NULL</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Uncaught Error</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="\u51FD\u6570\u5FFD\u7565\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u5FFD\u7565\u7C7B\u578B" aria-hidden="true">#</a> \u51FD\u6570\u5FFD\u7565\u7C7B\u578B</h2><p>\u4E00\u4E2A\u65B0\u7684\u8FD4\u56DE\u503C\u7C7B\u578Bvoid\u88AB\u5F15\u5165\u3002</p><p>\u8FD4\u56DE\u503C\u58F0\u660E\u4E3A void \u7C7B\u578B\u7684\u65B9\u6CD5\u8981\u4E48\u5E72\u8106\u7701\u53BB return \u8BED\u53E5\uFF0C\u8981\u4E48\u4F7F\u7528\u4E00\u4E2A\u7A7A\u7684 return \u8BED\u53E5\u3002</p><p>\u5BF9\u4E8E void \u51FD\u6570\u6765\u8BF4\uFF0Cnull \u4E0D\u662F\u4E00\u4E2A\u5408\u6CD5\u7684\u8FD4\u56DE\u503C\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">function</span> <span class="token function-definition function">swap</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$left</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token variable">$right</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$left</span> <span class="token operator">===</span> <span class="token variable">$right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token variable">$tmp</span> <span class="token operator">=</span> <span class="token variable">$left</span><span class="token punctuation">;</span>
    <span class="token variable">$left</span> <span class="token operator">=</span> <span class="token variable">$right</span><span class="token punctuation">;</span>
    <span class="token variable">$right</span> <span class="token operator">=</span> <span class="token variable">$tmp</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">swap</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null  int(2)  int(1)</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8BD5\u56FE\u53BB\u83B7\u53D6\u4E00\u4E2A <code>void</code> \u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u4F1A\u5F97\u5230 null \uFF0C\u5E76\u4E14\u4E0D\u4F1A\u4EA7\u751F\u4EFB\u4F55\u8B66\u544A\u3002</p><h2 id="\u6570\u7EC4\u89E3\u6784" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u89E3\u6784" aria-hidden="true">#</a> \u6570\u7EC4\u89E3\u6784</h2><p>\u5F53\u6211\u4EEC\u9700\u8981\u89E3\u6784\u6570\u7EC4\u7684\u65F6\u5019\uFF0C\u901A\u5E38\u4F1A\u6709\u5982\u4E0B\u64CD\u4F5C\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$person</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;curder&#39;</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token variable">$person</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string(6) &quot;curder&quot; int(29)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4E0A\u9762\u7684\u4F8B\u5B50\u53EF\u4EE5\u5199\u4E3A\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$person</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;curder&#39;</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$person</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string(6) &quot;curder&quot; int(29)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u9488\u5BF9<code>key</code> =&gt; <code>value</code>\u952E\u503C\u961F\u7684\u89E3\u6784\u5982\u4E0B\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$person</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;curder&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;age&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;hobby&#39;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;study&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;hobby&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$hobby</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;age&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$age</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$person</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">,</span> <span class="token variable">$hobby</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string(6) &quot;curder&quot; int(29) string(5) &quot;study&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u591A\u7EF4\u6570\u7EC4\u7684\u89E3\u6784</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$persons</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;name&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;curder&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;age&quot;</span> <span class="token operator">=&gt;</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;hobby&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;study&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;name&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;lily&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;age&quot;</span> <span class="token operator">=&gt;</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;hobby&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;shopping&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;hobby&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$hobby</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;age&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$age</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$persons</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">,</span> <span class="token variable">$hobby</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string(4) &quot;lily&quot; int(25) string(8) &quot;shopping&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5728<code>foreach</code>\u5FAA\u73AF\u4E2D\u540C\u65F6\u8FDB\u884C\u89E3\u6784\u8D4B\u503C</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$persons</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;name&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;curder&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;age&quot;</span> <span class="token operator">=&gt;</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;hobby&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;study&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;name&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;lily&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;age&quot;</span> <span class="token operator">=&gt;</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;hobby&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;shopping&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$persons</span> <span class="token keyword">as</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;hobby&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$hobby</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;age&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$age</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">,</span> <span class="token variable">$hobby</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// [] style</span>
<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$data</span> <span class="token keyword">as</span> <span class="token punctuation">[</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">,</span> <span class="token variable">$hobby</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// logic here with $name and $age and $hobby</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="\u7C7B\u5E38\u91CF\u53EF\u89C1\u6027" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u5E38\u91CF\u53EF\u89C1\u6027" aria-hidden="true">#</a> \u7C7B\u5E38\u91CF\u53EF\u89C1\u6027</h2><p>PHP 7.1 \u8D77\u652F\u6301\u8BBE\u7F6E\u7C7B\u5E38\u91CF\u7684\u53EF\u89C1\u6027\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">ConstDemo</span>
<span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token constant">PUBLIC_CONST_A</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u9ED8\u8BA4\u4E3A public</span>
    <span class="token keyword">public</span> <span class="token keyword">const</span> <span class="token constant">PUBLIC_CONST_B</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">const</span> <span class="token constant">PROTECTED_CONST</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token constant">PRIVATE_CONST</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="iterable-\u4F2A\u7C7B" tabindex="-1"><a class="header-anchor" href="#iterable-\u4F2A\u7C7B" aria-hidden="true">#</a> Iterable \u4F2A\u7C7B</h2><p><code>iterable</code> \u88AB\u79F0\u4E3A\u4F2A\u7C7B\uFF0C\u5B83\u53EF\u4EE5\u88AB\u7528\u5728\u53C2\u6570\u6216\u8005\u8FD4\u56DE\u503C\u7C7B\u578B\u4E2D\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">function</span> <span class="token function-definition function">dump</span><span class="token punctuation">(</span><span class="token keyword type-hint">iterable</span> <span class="token variable">$items</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$items</span> <span class="token keyword">as</span> <span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">Collection</span> <span class="token keyword">implements</span> <span class="token class-name">IteratorAggregate</span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token variable">$items</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$items</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">items</span> <span class="token operator">=</span> <span class="token variable">$items</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayIterator</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">items</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;one&quot;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;two&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;three&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string(3) &quot;one&quot; string(3) &quot;two&quot; string(5) &quot;three&quot;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Collection</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int(1) int(2) int(3)</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div>`,28),k={id:"\u591A\u9519\u8BEF\u5904\u7406",tabindex:"-1"},b=n("a",{class:"header-anchor",href:"#\u591A\u9519\u8BEF\u5904\u7406","aria-hidden":"true"},"#",-1),d=a(),m={href:"/docs/7.1/multi_catch_exception_handling.php",target:"_blank",rel:"noopener noreferrer"},g=a("\u591A\u9519\u8BEF\u5904\u7406"),h=s(`<p>\u4E4B\u524D\u5904\u7406\u9519\u8BEF\u65F6\uFF0C\u4F1A\u4F7F\u7528 <code>try</code> <code>catch</code>\u5173\u952E\u5B57\u5BF9\u5404\u79CD\u9519\u8BEF\u8FDB\u884C\u5904\u7406\uFF0C\u4F46\u662F\u6709\u65F6\u5019\u6211\u4EEC\u7684\u903B\u8F91\u9700\u8981\u5BF9\u4E00\u4E9B\u9519\u8BEF\u505A\u7EDF\u4E00\u7684\u5904\u7406\uFF0C\u5728php7.1\u4E2D\u53EF\u4EE5\u4F7F\u7528<code>|</code>\u6765\u5206\u5272\u591A\u4E2A\u9519\u8BEF\u8FDB\u884C\u7EDF\u4E00\u5904\u7406\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token comment">// \u5B9A\u4E49\u4E24\u4E2A\u81EA\u5B9A\u4E49\u7684\u9519\u8BEF\u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">ChargeRejected</span> <span class="token keyword">extends</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">NotEnoughFounds</span> <span class="token keyword">extends</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;subscrbing&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// throw new ChargeRejected;</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NotEnoughFounds</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ChargeRejected</span> <span class="token operator">|</span> <span class="token class-name">NotEnoughFounds</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5F53try\u91CC\u7684\u903B\u8F91\u629B\u51FA ChargeRejected \u6216\u8005 NotEnoughFounds \u9519\u8BEF\u65F6\u90FD\u4F1A\u6267\u884C\u4E0B\u9762\u7684\u903B\u8F91</span>
    <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Failed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function-definition function">flash</span><span class="token punctuation">(</span><span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="list-\u652F\u6301\u952E\u540D" tabindex="-1"><a class="header-anchor" href="#list-\u652F\u6301\u952E\u540D" aria-hidden="true">#</a> list() \u652F\u6301\u952E\u540D</h2><p>\u73B0\u5728 <code>list()</code> \u548C\u5B83\u7684\u65B0\u7684[]\u8BED\u6CD5\u652F\u6301\u5728\u5B83\u5185\u90E8\u53BB\u6307\u5B9A\u952E\u540D\u3002</p><p>\u8FD9\u610F\u5473\u7740\u5B83\u53EF\u4EE5\u5C06\u4EFB\u610F\u7C7B\u578B\u7684\u6570\u7EC4 \u90FD\u8D4B\u503C\u7ED9\u4E00\u4E9B\u53D8\u91CF\uFF08\u4E0E\u77ED\u6570\u7EC4\u8BED\u6CD5\u7C7B\u4F3C\uFF09</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;id&quot;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;name&quot;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Tom&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;id&quot;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;name&quot;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Fred&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// list() style</span>
<span class="token keyword">list</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;id&quot;</span> <span class="token operator">=&gt;</span> <span class="token variable">$id1</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;name&quot;</span> <span class="token operator">=&gt;</span> <span class="token variable">$name1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// [] style</span>
<span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;id&quot;</span> <span class="token operator">=&gt;</span> <span class="token variable">$id1</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;name&quot;</span> <span class="token operator">=&gt;</span> <span class="token variable">$name1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// list() style</span>
<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$data</span> <span class="token keyword">as</span> <span class="token keyword">list</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;id&quot;</span> <span class="token operator">=&gt;</span> <span class="token variable">$id</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;name&quot;</span> <span class="token operator">=&gt;</span> <span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// logic here with $id and $name</span>
<span class="token punctuation">}</span>

<span class="token comment">// [] style</span>
<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$data</span> <span class="token keyword">as</span> <span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;id&quot;</span> <span class="token operator">=&gt;</span> <span class="token variable">$id</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;name&quot;</span> <span class="token operator">=&gt;</span> <span class="token variable">$name</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// logic here with $id and $name</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="\u652F\u6301\u4E3A\u8D1F\u7684\u5B57\u7B26\u4E32\u504F\u79FB\u91CF" tabindex="-1"><a class="header-anchor" href="#\u652F\u6301\u4E3A\u8D1F\u7684\u5B57\u7B26\u4E32\u504F\u79FB\u91CF" aria-hidden="true">#</a> \u652F\u6301\u4E3A\u8D1F\u7684\u5B57\u7B26\u4E32\u504F\u79FB\u91CF</h2><p>\u73B0\u5728\u6240\u6709\u652F\u6301\u504F\u79FB\u91CF\u7684\u5B57\u7B26\u4E32\u64CD\u4F5C\u51FD\u6570\u90FD\u652F\u6301\u63A5\u53D7\u8D1F\u6570\u4F5C\u4E3A\u504F\u79FB\u91CF\uFF0C\u5305\u62EC\u901A\u8FC7[]\u6216{}\u64CD\u4F5C\u5B57\u7B26\u4E32\u4E0B\u6807\u3002</p><p>\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u4E00\u4E2A\u8D1F\u6570\u7684\u504F\u79FB\u91CF\u4F1A\u88AB\u7406\u89E3\u4E3A\u4E00\u4E2A\u4ECE\u5B57\u7B26\u4E32\u7ED3\u5C3E\u5F00\u59CB\u7684\u504F\u79FB\u91CF\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;abcdef&quot;</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string (1) &quot;e&quot;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;aabbcc&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int(3)</span>

<span class="token variable">$string</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;bar&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;The last character of &#39;<span class="token interpolation"><span class="token variable">$string</span></span>&#39; is &#39;<span class="token interpolation"><span class="token variable">$string</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></span>&#39;.\\n&quot;</span><span class="token punctuation">;</span> <span class="token comment">// The last character of &#39;bar&#39; is &#39;r&#39;.</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="closure-fromcallable-\u5C06callables\u8F6C\u4E3A\u95ED\u5305" tabindex="-1"><a class="header-anchor" href="#closure-fromcallable-\u5C06callables\u8F6C\u4E3A\u95ED\u5305" aria-hidden="true">#</a> <code>Closure::fromCallable()</code> \u5C06callables\u8F6C\u4E3A\u95ED\u5305</h2><p>Closure \u65B0\u589E\u4E86\u4E00\u4E2A\u9759\u6001\u65B9\u6CD5\uFF0C\u7528\u4E8E\u5C06 callable \u5FEB\u901F\u5730\u8F6C\u4E3A\u4E00\u4E2A Closure \u5BF9\u8C61\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">Test</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">exposeFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name static-context">Closure</span><span class="token operator">::</span><span class="token function">fromCallable</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token variable">$this</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;privateFunction&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">privateFunction</span><span class="token punctuation">(</span><span class="token variable">$param</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$param</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token variable">$privFunc</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">exposeFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$privFunc</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;some value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string(10) &quot;some value&quot;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,13);function v(q,f){const p=e("ExternalLinkIcon");return o(),c(u,null,[r,n("h2",k,[b,d,n("a",m,[g,l(p)])]),h],64)}var $=t(i,[["render",v],["__file","index.html.vue"]]);export{$ as default};
