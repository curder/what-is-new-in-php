import{_ as t,r as o,o as c,e as l,b as s,a as p,F as r,f as e,d as n}from"./app.4be821c3.js";const i={},u=e(`<h1 id="php-7-0" tabindex="-1"><a class="header-anchor" href="#php-7-0" aria-hidden="true">#</a> PHP 7.0</h1><p>PHP 7.0 \u7ED9\u5F00\u53D1\u8005\u5E26\u6765\u5F88\u591A\u65B0\u7279\u6027\uFF0C\u5B83\u4EEC\u5305\u62EC\uFF1A</p><h2 id="\u6807\u91CF\u7C7B\u578B\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u6807\u91CF\u7C7B\u578B\u58F0\u660E" aria-hidden="true">#</a> \u6807\u91CF\u7C7B\u578B\u58F0\u660E</h2><p>\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32 <code>string</code>, \u6574\u6570 <code>int</code>, \u6D6E\u70B9\u6570 <code>float</code>, \u4EE5\u53CA\u5E03\u5C14\u503C <code>bool</code>\uFF0C\u6765\u58F0\u660E\u51FD\u6570\u7684\u53C2\u6570\u7C7B\u578B\u4E0E\u51FD\u6570\u8FD4\u56DE\u503C\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">declare</span><span class="token punctuation">(</span>strict_types <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function-definition function">setAge</span><span class="token punctuation">(</span><span class="token keyword type-hint">int</span> <span class="token variable">$age</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$age</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function-definition function">setIsValid</span><span class="token punctuation">(</span><span class="token keyword type-hint">bool</span> <span class="token variable">$valid</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$valid</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u9ED8\u8BA4\u4F1A\u8FDB\u884C\u81EA\u52A8\u7C7B\u578B\u8F6C\u6362</span>
<span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int(29)</span>
<span class="token comment">// setAge(&#39;29&#39;); // \u9ED8\u8BA4\u4E0D\u5B9A\u4E49\`strict_types = 1\` \u4F1A\u8FD4\u56DE int(29)\uFF1B\u5982\u679C\u5B9A\u4E49\u5219\u4F1A\u629B\u51FA\u9519\u8BEF</span>

<span class="token comment">// \u5982\u679C\u4E0D\u80FD\u8FDB\u884C\u7C7B\u578B\u8F6C\u6362\u5219\u4F1A\u629B\u51FA\u9519\u8BEF</span>
<span class="token comment">// setAge(&#39;abs&#39;); // \u629B\u51FA\u9519\u8BEF</span>
<span class="token comment">// setIsValid(&#39;abs&#39;); // \u9ED8\u8BA4\u4E0D\u5B9A\u4E49\`strict_types = 1\` \u4F1A\u8FD4\u56DE bool(true)\uFF1B\u5982\u679C\u5B9A\u4E49\u5219\u4F1A\u629B\u51FA\u9519\u8BEF</span>
<span class="token comment">// setIsValid([]); // \u629B\u51FA\u9519\u8BEF</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><blockquote><p>\u6807\u91CF\u7C7B\u578B\u58F0\u660E \u6709\u4E24\u79CD\u6A21\u5F0F: \u5F3A\u5236 (\u9ED8\u8BA4) \u548C \u4E25\u683C\u6A21\u5F0F\u3002 declare(strict_types=1),\u5FC5\u987B\u653E\u5728\u6587\u4EF6\u7684\u7B2C\u4E00\u884C\u6267\u884C\u4EE3\u7801\uFF0C\u5F53\u524D\u6587\u4EF6\u6709\u6548\uFF01</p></blockquote><h2 id="\u8FD4\u56DE\u503C\u7C7B\u578B\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE\u503C\u7C7B\u578B\u58F0\u660E" aria-hidden="true">#</a> \u8FD4\u56DE\u503C\u7C7B\u578B\u58F0\u660E</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function-definition function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">User</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p>\u5982\u679C\u5B9A\u4E49\u4E86\u8FD4\u56DE\u503C\u7C7B\u578B\uFF0C\u5219\u4E0D\u5141\u8BB8\u8FD4\u56DE\u5176\u4ED6\u6570\u636E\u7C7B\u578B</p></blockquote><h2 id="null-\u5408\u5E76\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#null-\u5408\u5E76\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> <code>null</code> \u5408\u5E76\u8FD0\u7B97\u7B26</h2><p>\u5728\u5B9E\u9645\u5F00\u53D1\u4E2D\u5B58\u5728\u5927\u91CF\u540C\u65F6\u4F7F\u7528\u4E09\u5143\u8868\u8FBE\u5F0F\u548C <code>isset()</code> \u5224\u5B9A\u53D8\u91CF\u662F\u5426\u5B58\u5728\u7684\u60C5\u51B5\uFF0C PHP 7.0 \u6DFB\u52A0\u4E86 <code>null</code> \u5408\u5E76\u8FD0\u7B97\u7B26 (<code>??</code>) \u8FD9\u4E2A\u8BED\u6CD5\u7CD6\u3002</p><p>\u5982\u679C\u53D8\u91CF\u5B58\u5728\u4E14\u503C\u4E0D\u4E3A<code>null</code>\uFF0C\u5B83\u5C31\u4F1A\u8FD4\u56DE\u81EA\u8EAB\u7684\u503C\uFF0C\u5426\u5219\u8FD4\u56DE\u5B83\u7684\u7B2C\u4E8C\u4E2A\u64CD\u4F5C\u6570\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token comment">// \u4ECE\u5168\u5C40\u53D8\u91CF\u4E2D\u83B7\u53D6user\u7684\u503C\uFF0C\u5982\u679C\u5B58\u5728\u5219\u4F7F\u7528\uFF0C\u5426\u5219\u8FD4\u56DE nobody\uFF0C\u7C7B\u4F3C\u4E8E\uFF1Aisset($_GET[&#39;user&#39;]) ? $_GET[&#39;user&#39;] : &#39;nobody&#39;;</span>
<span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token string single-quoted-string">&#39;nobody&#39;</span><span class="token punctuation">;</span> 

<span class="token comment">// \u5148\u8BA1\u7B97 $_GET[&#39;user&#39;] \u662F\u5426\u5B58\u5728\uFF0C\u518D\u8BA1\u7B97 $_POST[&#39;user&#39;] \u662F\u5426\u5B58\u5728\uFF0C\u6700\u540E\u5982\u679C\u90FD\u4E0D\u5B58\u5728\u5219\u8FD4\u56DE nobody</span>
<span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token string single-quoted-string">&#39;nobody&#39;</span><span class="token punctuation">;</span> 
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u64CD\u4F5C\u7B26-\u7EC4\u5408\u6BD4\u8F83\u7B26" tabindex="-1"><a class="header-anchor" href="#\u64CD\u4F5C\u7B26-\u7EC4\u5408\u6BD4\u8F83\u7B26" aria-hidden="true">#</a> <code>&lt;=&gt;</code>\u64CD\u4F5C\u7B26\uFF08\u7EC4\u5408\u6BD4\u8F83\u7B26\uFF09</h2><p>\u592A\u7A7A\u8239\u64CD\u4F5C\u7B26\u7528\u4E8E\u6BD4\u8F83\u4E24\u4E2A\u8868\u8FBE\u5F0F\u3002\u5F53 <code>$a</code> \u5C0F\u4E8E\u3001\u7B49\u4E8E\u6216\u5927\u4E8E <code>$b</code> \u65F6\u5B83\u5206\u522B\u8FD4\u56DE <code>-1</code>\u3001<code>0</code>\u6216<code>1</code>\u3002</p><p><strong>\u8BED\u6CD5</strong>\uFF1A<code>$c = $a &lt;=&gt; $b</code></p><ul><li><p>\u5F53 <code>$a &gt; $b</code>, \u5219 <code>$c</code> \u7684\u503C\u4E3A <code>1</code></p></li><li><p>\u5F53 <code>$a == $b</code>, \u5219 <code>$c</code> \u7684\u503C\u4E3A <code>0</code></p></li><li><p>\u5F53 <code>$a &lt; $b</code>, \u5219 <code>$c</code> \u7684\u503C\u4E3A <code>-1</code></p></li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token comment">// \u6574\u6570</span>
<span class="token keyword">echo</span> <span class="token number">1</span> <span class="token operator">&lt;=&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
<span class="token keyword">echo</span> <span class="token number">1</span> <span class="token operator">&lt;=&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// -1</span>
<span class="token keyword">echo</span> <span class="token number">2</span> <span class="token operator">&lt;=&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>

<span class="token comment">// \u6D6E\u70B9\u6570</span>
<span class="token keyword">echo</span> <span class="token number">1.5</span> <span class="token operator">&lt;=&gt;</span> <span class="token number">1.5</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
<span class="token keyword">echo</span> <span class="token number">1.5</span> <span class="token operator">&lt;=&gt;</span> <span class="token number">2.5</span><span class="token punctuation">;</span> <span class="token comment">// -1</span>
<span class="token keyword">echo</span> <span class="token number">2.5</span> <span class="token operator">&lt;=&gt;</span> <span class="token number">1.5</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
 
<span class="token comment">// \u5B57\u7B26\u4E32</span>
<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;a&quot;</span> <span class="token operator">&lt;=&gt;</span> <span class="token string double-quoted-string">&quot;a&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;a&quot;</span> <span class="token operator">&lt;=&gt;</span> <span class="token string double-quoted-string">&quot;b&quot;</span><span class="token punctuation">;</span> <span class="token comment">// -1</span>
<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;b&quot;</span> <span class="token operator">&lt;=&gt;</span> <span class="token string double-quoted-string">&quot;a&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="\u901A\u8FC7-define-\u5B9A\u4E49\u5E38\u91CF\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u901A\u8FC7-define-\u5B9A\u4E49\u5E38\u91CF\u6570\u7EC4" aria-hidden="true">#</a> \u901A\u8FC7 <code>define()</code> \u5B9A\u4E49\u5E38\u91CF\u6570\u7EC4</h2><p>Array \u7C7B\u578B\u7684\u5E38\u91CF\u5728 PHP 7.0 \u53EF\u4EE5\u901A\u8FC7 <code>define()</code> \u6765\u5B9A\u4E49\u3002\u5728 <code>PHP 5.6</code> \u4E2D\u4EC5\u80FD\u901A\u8FC7 <code>const</code> \u5B9A\u4E49\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ANIMALS&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;dog&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;cat&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;bird&#39;</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token constant">ANIMALS</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u8F93\u51FA &quot;cat&quot;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="\u533F\u540D\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u533F\u540D\u7C7B" aria-hidden="true">#</a> \u533F\u540D\u7C7B</h2>`,22),k=n("\u652F\u6301\u901A\u8FC7 "),d=s("code",null,"new class",-1),b=n(" \u6765\u5B9E\u4F8B\u5316\u4E00\u4E2A"),m={href:"https://www.php.net/manual/zh/language.oop5.anonymous.php",target:"_blank",rel:"noopener noreferrer"},h=n("\u533F\u540D\u7C7B"),g=n("\uFF0C\u8FD9\u53EF\u4EE5\u7528\u6765\u66FF\u4EE3\u4E00\u4E9B\u201C\u7528\u540E\u5373\u711A\u201D\u7684\u5B8C\u6574\u7C7B\u5B9A\u4E49\u3002"),f=e(`<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">interface</span> <span class="token class-name-definition class-name">Logger</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">log</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$msg</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">Application</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token variable">$logger</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Logger</span> <span class="token punctuation">{</span>
         <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">logger</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">setLogger</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Logger</span> <span class="token variable">$logger</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">logger</span> <span class="token operator">=</span> <span class="token variable">$logger</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token variable">$app</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Application</span><span class="token punctuation">;</span>
<span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">setLogger</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">implements</span> <span class="token class-name">Logger</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">log</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$msg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token variable">$msg</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/*
\u4EE3\u7801\u8FD0\u884C\u4F1A\u8F93\u51FA\uFF1A
object(class@anonymous)#2 (0) {
}
 */</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h2 id="unicode-codepoint-\u8F6C\u8BD1\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#unicode-codepoint-\u8F6C\u8BD1\u8BED\u6CD5" aria-hidden="true">#</a> Unicode codepoint \u8F6C\u8BD1\u8BED\u6CD5</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\\u{aa}&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\\u{0000aa}&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\\u{9999}&quot;</span><span class="token punctuation">;</span>

<span class="token comment">/*
\xAA
\xAA (same as before but with optional leading 0&#39;s)
\u9999
*/</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="closure-call" tabindex="-1"><a class="header-anchor" href="#closure-call" aria-hidden="true">#</a> <code>Closure::call()</code></h2><p><code>Closure::call()</code> \u73B0\u5728\u6709\u7740\u66F4\u597D\u7684\u6027\u80FD\uFF0C\u7B80\u77ED\u5E72\u7EC3\u7684\u6682\u65F6\u7ED1\u5B9A\u4E00\u4E2A\u65B9\u6CD5\u5230\u5BF9\u8C61\u95ED\u5305\u5E76\u8C03\u7528\u5B83\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">A</span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token variable">$x</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>

<span class="token comment">// PHP 7 \u4E4B\u524D\u7248\u672C\u7684\u4EE3\u7801</span>
<span class="token variable">$getXCB</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">x</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token variable">$getX</span> <span class="token operator">=</span> <span class="token variable">$getXCB</span><span class="token operator">-&gt;</span><span class="token function">bindTo</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E2D\u95F4\u5C42\u95ED\u5305</span>
<span class="token keyword">echo</span> <span class="token variable">$getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// PHP 7+ \u53CA\u66F4\u9AD8\u7248\u672C\u7684\u4EE3\u7801</span>
<span class="token variable">$getX</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">x</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token variable">$getX</span><span class="token operator">-&gt;</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="\u4E3A-unserialize-\u63D0\u4F9B\u8FC7\u6EE4" tabindex="-1"><a class="header-anchor" href="#\u4E3A-unserialize-\u63D0\u4F9B\u8FC7\u6EE4" aria-hidden="true">#</a> \u4E3A <code>unserialize()</code> \u63D0\u4F9B\u8FC7\u6EE4</h2><p>\u8FD9\u4E2A\u7279\u6027\u65E8\u5728\u63D0\u4F9B\u66F4\u5B89\u5168\u7684\u65B9\u5F0F\u89E3\u5305\u4E0D\u53EF\u9760\u7684\u6570\u636E\u3002\u5B83\u901A\u8FC7\u767D\u540D\u5355\u7684\u65B9\u5F0F\u6765\u9632\u6B62\u6F5C\u5728\u7684\u4EE3\u7801\u6CE8\u5165\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token comment">// \u5C06\u6240\u6709\u7684\u5BF9\u8C61\u90FD\u8F6C\u6362\u4E3A __PHP_Incomplete_Class \u5BF9\u8C61</span>
<span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$foo</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;allowed_classes&quot;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5C06\u9664 MyClass \u548C MyClass2 \u4E4B\u5916\u7684\u6240\u6709\u5BF9\u8C61\u90FD\u8F6C\u6362\u4E3A __PHP_Incomplete_Class \u5BF9\u8C61</span>
<span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$foo</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;allowed_classes&quot;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;MyClass&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;MyClass2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\u6240\u6709\u7684\u7C7B\u90FD\u662F\u53EF\u63A5\u53D7\u7684\uFF0C\u7B49\u540C\u4E8E\u7701\u7565\u7B2C\u4E8C\u4E2A\u53C2\u6570</span>
<span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$foo</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;allowed_classes&quot;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="intlchar" tabindex="-1"><a class="header-anchor" href="#intlchar" aria-hidden="true">#</a> IntlChar</h2><p>\u65B0\u589E\u52A0\u7684 IntlChar \u7C7B\u65E8\u5728\u66B4\u9732\u51FA\u66F4\u591A\u7684 ICU \u529F\u80FD\u3002</p><p>\u8FD9\u4E2A\u7C7B\u81EA\u8EAB\u5B9A\u4E49\u4E86\u8BB8\u591A\u9759\u6001\u65B9\u6CD5\u7528\u4E8E\u64CD\u4F5C\u591A\u5B57\u7B26\u96C6\u7684 <code>unicode</code> \u5B57\u7B26\u3002</p>`,12),_=n("\u82E5\u8981\u4F7F\u7528\u6B64\u7C7B\uFF0C\u8BF7\u5148\u5B89\u88C5 "),y={href:"https://www.php.net/manual/zh/book.intl.php",target:"_blank",rel:"noopener noreferrer"},v=n("Intl\u6269\u5C55"),w=n("\u3002"),q=e(`<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;%x&#39;</span><span class="token punctuation">,</span> <span class="token class-name static-context">IntlChar</span><span class="token operator">::</span><span class="token constant">CODEPOINT_MAX</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token class-name static-context">IntlChar</span><span class="token operator">::</span><span class="token function">charName</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;@&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token class-name static-context">IntlChar</span><span class="token operator">::</span><span class="token function">ispunct</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/*
\u4EE5\u4E0A\u4F8B\u7A0B\u4F1A\u8F93\u51FA\uFF1A

10ffff
COMMERCIAL AT
bool(true)
*/</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="\u9884\u671F" tabindex="-1"><a class="header-anchor" href="#\u9884\u671F" aria-hidden="true">#</a> \u9884\u671F</h2><p>\u9884\u671F\u662F\u5411\u540E\u517C\u7528\u5E76\u589E\u5F3A\u4E4B\u524D\u7684 <code>assert()</code> \u7684\u65B9\u6CD5\u3002 \u5B83\u4F7F\u5F97\u5728\u751F\u4EA7\u73AF\u5883\u4E2D\u542F\u7528\u65AD\u8A00\u4E3A\u96F6\u6210\u672C\uFF0C\u5E76\u4E14\u63D0\u4F9B\u5F53\u65AD\u8A00\u5931\u8D25\u65F6\u629B\u51FA\u7279\u5B9A\u5F02\u5E38\u7684\u80FD\u529B\u3002</p><p>\u8001\u7248\u672C\u7684API\u51FA\u4E8E\u517C\u5BB9\u76EE\u7684\u5C06\u7EE7\u7EED\u88AB\u7EF4\u62A4\uFF0C<code>assert()</code> \u73B0\u5728\u662F\u4E00\u4E2A\u8BED\u8A00\u7ED3\u6784\uFF0C\u5B83\u5141\u8BB8\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u8868\u8FBE\u5F0F\uFF0C\u800C\u4E0D\u4EC5\u4EC5\u662F\u4E00\u4E2A\u5F85\u8BA1\u7B97\u7684 <code>string</code> \u6216\u4E00\u4E2A\u5F85\u6D4B\u8BD5\u7684 <code>boolean</code>\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;assert.exception&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">CustomError</span> <span class="token keyword">extends</span> <span class="token class-name">AssertionError</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token function">assert</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">CustomError</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Some error message&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Fatal error: Uncaught CustomError: Some error message</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,5),$=n("\u5173\u4E8E\u8FD9\u4E2A\u7279\u6027\u7684\u5B8C\u6574\u8BF4\u660E\uFF0C\u5305\u62EC\u5982\u4F55\u5728\u5F00\u53D1\u548C\u751F\u4EA7\u73AF\u5883\u4E2D\u914D\u7F6E\u5B83\uFF0C\u53EF\u4EE5\u5728 "),x={href:"https://www.php.net/manual/zh/function.assert.php",target:"_blank",rel:"noopener noreferrer"},C=n("assert()"),P=n(" \u7684 "),A={href:"https://www.php.net/manual/zh/function.assert.php#function.assert.expectations",target:"_blank",rel:"noopener noreferrer"},I=n("expectations section"),H=n(" \u7AE0\u8282\u627E\u5230\u3002"),z=e(`<h2 id="\u547D\u540D\u7A7A\u95F4\u5F15\u7528\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#\u547D\u540D\u7A7A\u95F4\u5F15\u7528\u4F18\u5316" aria-hidden="true">#</a> \u547D\u540D\u7A7A\u95F4\u5F15\u7528\u4F18\u5316</h2><p>\u4ECE\u540C\u4E00\u547D\u540D\u7A7A\u95F4\u5BFC\u5165\u7684\u7C7B\u3001\u51FD\u6570\u548C\u5E38\u91CF\u73B0\u5728\u53EF\u4EE5\u901A\u8FC7\u5355\u4E2A use \u8BED\u53E5\u4E00\u6B21\u6027\u5BFC\u5165\u3002</p><p>\u5728\u4E4B\u524D\u7684php\u7248\u672C\u8BED\u6CD5\u7684\u5199\u6CD5\u662F\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token comment">// PHP 7 \u4E4B\u524D\u7684\u4EE3\u7801</span>
<span class="token keyword">use</span> <span class="token package">some<span class="token punctuation">\\</span>namespace<span class="token punctuation">\\</span>ClassA</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">some<span class="token punctuation">\\</span>namespace<span class="token punctuation">\\</span>ClassB</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">some<span class="token punctuation">\\</span>namespace<span class="token punctuation">\\</span>ClassC</span> <span class="token keyword">as</span> <span class="token constant">C</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token keyword">function</span> <span class="token package">some<span class="token punctuation">\\</span>namespace<span class="token punctuation">\\</span>fn_a</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token keyword">function</span> <span class="token package">some<span class="token punctuation">\\</span>namespace<span class="token punctuation">\\</span>fn_b</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token keyword">function</span> <span class="token package">some<span class="token punctuation">\\</span>namespace<span class="token punctuation">\\</span>fn_c</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">const</span> some\\<span class="token keyword">namespace</span>\\ConstA<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">const</span> some\\<span class="token keyword">namespace</span>\\ConstB<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">const</span> some\\<span class="token keyword">namespace</span>\\ConstC<span class="token punctuation">;</span>

<span class="token comment">// PHP 7+ \u53CA\u66F4\u9AD8\u7248\u672C\u7684\u4EE3\u7801</span>
<span class="token keyword">use</span> some\\<span class="token keyword">namespace</span>\\<span class="token punctuation">{</span>ClassA<span class="token punctuation">,</span> ClassB<span class="token punctuation">,</span> ClassC <span class="token keyword">as</span> <span class="token constant">C</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">function</span> some\\<span class="token keyword">namespace</span>\\<span class="token punctuation">{</span>fn_a<span class="token punctuation">,</span> fn_b<span class="token punctuation">,</span> fn_c<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">const</span> some\\<span class="token keyword">namespace</span>\\<span class="token punctuation">{</span>ConstA<span class="token punctuation">,</span> ConstB<span class="token punctuation">,</span> ConstC<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="\u751F\u6210\u5668\u53EF\u4EE5\u8FD4\u56DE\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668\u53EF\u4EE5\u8FD4\u56DE\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u751F\u6210\u5668\u53EF\u4EE5\u8FD4\u56DE\u8868\u8FBE\u5F0F</h2><p>\u6B64\u7279\u6027\u57FA\u4E8E PHP 5.5 \u7248\u672C\u4E2D\u5F15\u5165\u7684\u751F\u6210\u5668\u7279\u6027\u6784\u5EFA\u7684\u3002</p><p>\u5B83\u5141\u8BB8\u5728\u751F\u6210\u5668\u51FD\u6570\u4E2D\u901A\u8FC7\u4F7F\u7528 <code>return</code> \u8BED\u6CD5\u6765\u8FD4\u56DE\u4E00\u4E2A\u8868\u8FBE\u5F0F \uFF08\u4F46\u662F\u4E0D\u5141\u8BB8\u8FD4\u56DE\u5F15\u7528\u503C\uFF09\uFF0C \u53EF\u4EE5\u901A\u8FC7\u8C03\u7528 <code>Generator::getReturn()</code> \u65B9\u6CD5\u6765\u83B7\u53D6\u751F\u6210\u5668\u7684\u8FD4\u56DE\u503C\uFF0C \u4F46\u662F\u8FD9\u4E2A\u65B9\u6CD5\u53EA\u80FD\u5728\u751F\u6210\u5668\u5B8C\u6210\u4EA7\u751F\u5DE5\u4F5C\u4EE5\u540E\u8C03\u7528\u4E00\u6B21\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token variable">$gen</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$gen</span> <span class="token keyword">as</span> <span class="token variable">$val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token variable">$val</span><span class="token punctuation">,</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">echo</span> <span class="token variable">$gen</span><span class="token operator">-&gt;</span><span class="token function">getReturn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
\u8F93\u51FA\uFF1A

1
2
3
 */</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u5728\u751F\u6210\u5668\u4E2D\u80FD\u591F\u8FD4\u56DE\u6700\u7EC8\u7684\u503C\u662F\u4E00\u4E2A\u975E\u5E38\u4FBF\u5229\u7684\u7279\u6027\uFF0C \u56E0\u4E3A\u5B83\u4F7F\u5F97\u8C03\u7528\u751F\u6210\u5668\u7684\u5BA2\u6237\u7AEF\u4EE3\u7801\u53EF\u4EE5\u76F4\u63A5\u5F97\u5230\u751F\u6210\u5668\uFF08\u6216\u8005\u5176\u4ED6\u534F\u540C\u8BA1\u7B97\uFF09\u7684\u8FD4\u56DE\u503C\uFF0C \u76F8\u5BF9\u4E8E\u4E4B\u524D\u7248\u672C\u4E2D\u5BA2\u6237\u7AEF\u4EE3\u7801\u5FC5\u987B\u5148\u68C0\u67E5\u751F\u6210\u5668\u662F\u5426\u4EA7\u751F\u4E86\u6700\u7EC8\u7684\u503C\u7136\u540E\u518D\u8FDB\u884C\u54CD\u5E94\u5904\u7406\u6765\u5F97\u65B9\u4FBF\u591A\u4E86\u3002</p><h2 id="\u751F\u6210\u5668\u59D4\u6258" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668\u59D4\u6258" aria-hidden="true">#</a> \u751F\u6210\u5668\u59D4\u6258</h2><p>\u73B0\u5728\uFF0C\u53EA\u9700\u5728\u6700\u5916\u5C42\u751F\u6210\u5176\u4E2D\u4F7F\u7528 yield from\uFF0C \u5C31\u53EF\u4EE5\u628A\u4E00\u4E2A\u751F\u6210\u5668\u81EA\u52A8\u59D4\u6D3E\u7ED9\u5176\u4ED6\u7684\u751F\u6210\u5668\uFF0C Traversable \u5BF9\u8C61\u6216\u8005 array\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">function</span> <span class="token function-definition function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>

    <span class="token keyword">yield</span> <span class="token keyword">from</span> <span class="token function">gen2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function-definition function">gen2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$val</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token variable">$val</span><span class="token punctuation">,</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
1
2
3
4
 */</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="\u6574\u6570\u9664\u6CD5\u51FD\u6570-intdiv" tabindex="-1"><a class="header-anchor" href="#\u6574\u6570\u9664\u6CD5\u51FD\u6570-intdiv" aria-hidden="true">#</a> \u6574\u6570\u9664\u6CD5\u51FD\u6570 <code>intdiv()</code></h2><p>\u65B0\u52A0\u7684\u51FD\u6570 <code>intdiv()</code> \u7528\u6765\u8FDB\u884C \u6574\u6570\u7684\u9664\u6CD5\u8FD0\u7B97\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">intdiv</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int(3)</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="\u4F1A\u8BDD\u9009\u9879" tabindex="-1"><a class="header-anchor" href="#\u4F1A\u8BDD\u9009\u9879" aria-hidden="true">#</a> \u4F1A\u8BDD\u9009\u9879</h2><p><code>session_start()</code> \u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A <code>array</code> \u4F5C\u4E3A\u53C2\u6570\uFF0C \u7528\u6765\u8986\u76D6 <code>php.ini</code> \u6587\u4EF6\u4E2D\u8BBE\u7F6E\u7684\u4F1A\u8BDD\u914D\u7F6E\u9009\u9879\u3002</p><p>\u5728\u8C03\u7528 <code>session_start()</code> \u7684\u65F6\u5019\uFF0C \u4F20\u5165\u7684\u9009\u9879\u53C2\u6570\u4E2D\u4E5F\u652F\u6301 <code>session.lazy_write</code> \u884C\u4E3A\uFF0C \u9ED8\u8BA4\u60C5\u51B5\u4E0B\u8FD9\u4E2A\u914D\u7F6E\u9879\u662F\u6253\u5F00\u7684\u3002</p><p>\u5B83\u7684\u4F5C\u7528\u662F\u63A7\u5236 PHP \u53EA\u6709\u5728\u4F1A\u8BDD\u4E2D\u7684\u6570\u636E\u53D1\u751F\u53D8\u5316\u7684\u65F6\u5019\u624D\u5199\u5165\u4F1A\u8BDD\u5B58\u50A8\u6587\u4EF6\uFF0C\u5982\u679C\u4F1A\u8BDD\u4E2D\u7684\u6570\u636E\u6CA1\u6709\u53D1\u751F\u6539\u53D8\uFF0C\u90A3\u4E48 PHP \u4F1A\u5728\u8BFB\u53D6\u5B8C\u4F1A\u8BDD\u6570\u636E\u4E4B\u540E\uFF0C \u7ACB\u5373\u5173\u95ED\u4F1A\u8BDD\u5B58\u50A8\u6587\u4EF6\uFF0C\u4E0D\u505A\u4EFB\u4F55\u4FEE\u6539\uFF0C\u53EF\u4EE5\u901A\u8FC7\u8BBE\u7F6E <code>read_and_close</code> \u6765\u5B9E\u73B0\u3002</p>`,19),E=n("\u4F8B\u5982\uFF0C\u4E0B\u5217\u4EE3\u7801\u8BBE\u7F6E "),L={href:"https://www.php.net/manual/zh/session.configuration.php#ini.session.cache-limiter",target:"_blank",rel:"noopener noreferrer"},T=s("code",null,"session.cache_limiter",-1),B=n(" \u4E3A "),M=s("code",null,"private",-1),N=n("\uFF0C\u5E76\u4E14\u5728\u8BFB\u53D6\u5B8C\u6BD5\u4F1A\u8BDD\u6570\u636E\u4E4B\u540E\u9A6C\u4E0A\u5173\u95ED\u4F1A\u8BDD\u5B58\u50A8\u6587\u4EF6\u3002"),O=e(`<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;cache_limiter&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;private&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;read_and_close&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="preg-replace-callback-array" tabindex="-1"><a class="header-anchor" href="#preg-replace-callback-array" aria-hidden="true">#</a> <code>preg_replace_callback_array()</code></h2><p>\u5728 PHP 7 \u4E4B\u524D\uFF0C\u5F53\u4F7F\u7528 <code>preg_replace_callback()</code> \u51FD\u6570\u7684\u65F6\u5019\uFF0C\u7531\u4E8E\u9488\u5BF9\u6BCF\u4E2A\u6B63\u5219\u8868\u8FBE\u5F0F\u90FD\u8981\u6267\u884C\u56DE\u8C03\u51FD\u6570\uFF0C\u53EF\u80FD\u5BFC\u81F4\u8FC7\u591A\u7684\u5206\u652F\u4EE3\u7801\u3002</p><p>\u800C\u4F7F\u7528\u65B0\u52A0\u7684 <code>preg_replace_callback_array()</code> \u51FD\u6570\uFF0C\u53EF\u4EE5\u4F7F\u5F97\u4EE3\u7801\u66F4\u52A0\u7B80\u6D01\u3002</p><p>\u73B0\u5728\uFF0C\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u5173\u8054\u6570\u7EC4\u6765\u5BF9\u6BCF\u4E2A\u6B63\u5219\u8868\u8FBE\u5F0F\u6CE8\u518C\u56DE\u8C03\u51FD\u6570\uFF0C\u6B63\u5219\u8868\u8FBE\u5F0F\u672C\u8EAB\u4F5C\u4E3A\u5173\u8054\u6570\u7EC4\u7684\u952E\uFF0C\u800C\u5BF9\u5E94\u7684\u56DE\u8C03\u51FD\u6570\u5C31\u662F\u5173\u8054\u6570\u7EC4\u7684\u503C\u3002</p>`,5),S={id:"csprng-\u51FD\u6570",tabindex:"-1"},U=s("a",{class:"header-anchor",href:"#csprng-\u51FD\u6570","aria-hidden":"true"},"#",-1),G=n(),V={href:"https://www.php.net/manual/zh/book.csprng.php",target:"_blank",rel:"noopener noreferrer"},X=n("CSPRNG \u51FD\u6570"),R=n("\u65B0\u52A0\u5165\u4E24\u4E2A\u8DE8\u5E73\u53F0\u7684\u51FD\u6570\uFF1A"),F={href:"https://www.php.net/manual/zh/function.random-bytes.php",target:"_blank",rel:"noopener noreferrer"},j=n("random_bytes()"),D=n(" \u548C "),J={href:"https://www.php.net/manual/zh/function.random-int.php",target:"_blank",rel:"noopener noreferrer"},K=n("random_int()"),Q=n(" \u7528\u6765\u4EA7\u751F\u9AD8\u5B89\u5168\u7EA7\u522B\u7684\u968F\u673A\u5B57\u7B26\u4E32\u548C\u968F\u673A\u6574\u6570\u3002"),W=e(`<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$bytes</span> <span class="token operator">=</span> <span class="token function">random_bytes</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token variable">$bytes</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 17f0e357144a</span>

<span class="token keyword">echo</span> <span class="token function">random_int</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">999</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 623</span>
<span class="token keyword">echo</span> <span class="token function">random_int</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -460</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="list-\u51FD\u6570\u5C55\u5F00-arrayaccess-\u63A5\u53E3\u7684\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#list-\u51FD\u6570\u5C55\u5F00-arrayaccess-\u63A5\u53E3\u7684\u5BF9\u8C61" aria-hidden="true">#</a> <code>list()</code> \u51FD\u6570\u5C55\u5F00 ArrayAccess \u63A5\u53E3\u7684\u5BF9\u8C61</h2><p>\u5728\u4E4B\u524D\u7248\u672C\u4E2D\uFF0C<code>list()</code> \u51FD\u6570\u4E0D\u80FD\u4FDD\u8BC1\u6B63\u786E\u7684\u5C55\u5F00\u5B9E\u73B0\u4E86 <code>ArrayAccess</code> \u63A5\u53E3\u7684\u5BF9\u8C61\uFF0C\u73B0\u5728\u8FD9\u4E2A\u95EE\u9898\u5DF2\u7ECF\u88AB\u4FEE\u590D\u3002</p><h2 id="\u5176\u4ED6\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6\u7279\u6027" aria-hidden="true">#</a> \u5176\u4ED6\u7279\u6027</h2><p>\u5141\u8BB8\u5728\u514B\u9686\u8868\u8FBE\u5F0F\u4E0A\u8BBF\u95EE\u5BF9\u8C61\u6210\u5458\uFF0C\u4F8B\u5982\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token punctuation">(</span><span class="token keyword">clone</span> <span class="token variable">$foo</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5141\u8BB8\u4F7F\u7528\u5B57\u7B26\u4E32\u7684\u53D8\u91CF\u7C7B\u540D\u8C03\u7528</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">foo</span> <span class="token punctuation">{</span> <span class="token keyword">static</span> <span class="token variable">$bar</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;baz&#39;</span><span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;world&#39;</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token operator">::</span><span class="token variable">$bar</span><span class="token punctuation">;</span> <span class="token comment">// baz</span>
<span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token operator">::</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// world </span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,8);function Y(Z,nn){const a=o("ExternalLinkIcon");return c(),l(r,null,[u,s("p",null,[k,d,b,s("a",m,[h,p(a)]),g]),f,s("p",null,[_,s("a",y,[v,p(a)]),w]),q,s("p",null,[$,s("a",x,[C,p(a)]),P,s("a",A,[I,p(a)]),H]),z,s("p",null,[E,s("a",L,[T,p(a)]),B,M,N]),O,s("h2",S,[U,G,s("a",V,[X,p(a)])]),s("p",null,[R,s("a",F,[j,p(a)]),D,s("a",J,[K,p(a)]),Q]),W],64)}var an=t(i,[["render",Y],["__file","index.html.vue"]]);export{an as default};
