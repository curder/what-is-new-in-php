import{_ as t,r as o,o as c,e as l,b as n,a as p,F as r,d as s,f as e}from"./app.27c7bfba.js";const i={},u=n("h1",{id:"php-8-0",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#php-8-0","aria-hidden":"true"},"#"),s(" PHP 8.0")],-1),k={id:"nullsafe-\u8FD0\u7B97\u7B26",tabindex:"-1"},b=n("a",{class:"header-anchor",href:"#nullsafe-\u8FD0\u7B97\u7B26","aria-hidden":"true"},"#",-1),d=s(),m={href:"https://www.php.net/releases/8.0/zh.php#nullsafe-operator",target:"_blank",rel:"noopener noreferrer"},h=s("Nullsafe \u8FD0\u7B97\u7B26"),_=e(`<p>\u73B0\u5728\u53EF\u4EE5\u7528\u65B0\u7684 nullsafe \u8FD0\u7B97\u7B26\u94FE\u5F0F\u8C03\u7528\uFF0C\u800C\u4E0D\u9700\u8981\u6761\u4EF6\u68C0\u67E5 null\u3002 \u5982\u679C\u94FE\u6761\u4E2D\u7684\u4E00\u4E2A\u5143\u7D20\u5931\u8D25\u4E86\uFF0C\u6574\u4E2A\u94FE\u6761\u4F1A\u4E2D\u6B62\u5E76\u8BA4\u5B9A\u4E3A Null\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">null</span><span class="token punctuation">;</span> <span class="token comment">// return new Profile;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">Profile</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">employment</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;web development&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token variable">$user</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">;</span>

<span class="token comment">// \u4E4B\u524D\u7684\u5199\u6CD5\uFF0C\u5148\u5224\u65AD\u662F\u5426\u5B58\u5728\uFF0C\u518D\u8FDB\u884C\u8C03\u7528</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$profile</span> <span class="token operator">=</span> <span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$profile</span><span class="token operator">-&gt;</span><span class="token function">employment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 8.0 \u5141\u8BB8\u901A\u8FC7 nullsafe \u8FDB\u884C\u94FE\u5F0F\u8C03\u7528</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?-&gt;</span><span class="token function">employment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token string single-quoted-string">&#39;Not Provider&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div>`,2),g={id:"match-\u8868\u8FBE\u5F0F",tabindex:"-1"},v=n("a",{class:"header-anchor",href:"#match-\u8868\u8FBE\u5F0F","aria-hidden":"true"},"#",-1),w=s(),f={href:"https://www.php.net/releases/8.0/zh.php#match-expression",target:"_blank",rel:"noopener noreferrer"},y=s("Match \u8868\u8FBE\u5F0F"),$=e(`<p>\u65B0\u7684 <code>match</code> \u7C7B\u4F3C\u4E8E <code>switch</code>\uFF0C\u5E76\u5177\u6709\u4EE5\u4E0B\u529F\u80FD\uFF1A</p><ul><li>Match \u662F\u4E00\u4E2A\u8868\u8FBE\u5F0F\uFF0C\u5B83\u53EF\u4EE5\u50A8\u5B58\u5230\u53D8\u91CF\u4E2D\u4EA6\u53EF\u4EE5\u76F4\u63A5\u8FD4\u56DE\u3002</li><li>Match \u5206\u652F\u4EC5\u652F\u6301\u5355\u884C\uFF0C\u5B83\u4E0D\u9700\u8981\u4E00\u4E2A <code>break;</code> \u8BED\u53E5\u3002</li><li>Match \u4F7F\u7528\u4E25\u683C\u6BD4\u8F83\u3002</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">Conversation</span>
<span class="token punctuation">{</span>
    <span class="token comment">//</span>
<span class="token punctuation">}</span>

<span class="token variable">$object</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Conversation</span><span class="token punctuation">;</span>

<span class="token comment">//switch (get_class($object)) {</span>
<span class="token comment">//    case &#39;Conversation&#39;:</span>
<span class="token comment">//        $type = &#39;started_conversation&#39;;</span>
<span class="token comment">//        break;</span>
<span class="token comment">//</span>
<span class="token comment">//    case &#39;Reply&#39;:</span>
<span class="token comment">//        $type = &#39;replied_to_conversation&#39;;</span>
<span class="token comment">//        break;</span>
<span class="token comment">//</span>
<span class="token comment">//    case &#39;Comment&#39;:</span>
<span class="token comment">//        $type = &#39;commented_to_conversation&#39;;</span>
<span class="token comment">//        break;</span>
<span class="token comment">//}</span>

<span class="token comment">// \u4F7F\u7528match\u8868\u8FBE\u5F0F\u7B80\u5316\u5199\u6CD5</span>
<span class="token variable">$type</span> <span class="token operator">=</span> <span class="token keyword">match</span> <span class="token punctuation">(</span><span class="token function">get_class</span><span class="token punctuation">(</span><span class="token variable">$object</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token string single-quoted-string">&#39;Conversation&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;stated_conversation&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;Reply&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;replied_to_conversation&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;Comment&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;commented_to_conversation&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$type</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div>`,3),q={id:"\u6784\u9020\u5668\u5C5E\u6027\u63D0\u5347",tabindex:"-1"},x=n("a",{class:"header-anchor",href:"#\u6784\u9020\u5668\u5C5E\u6027\u63D0\u5347","aria-hidden":"true"},"#",-1),P=s(),U={href:"https://www.php.net/releases/8.0/zh.php#constructor-property-promotion",target:"_blank",rel:"noopener noreferrer"},C=s("\u6784\u9020\u5668\u5C5E\u6027\u63D0\u5347"),E=e(`<p>\u5728 PHP 8.0 \u4E2D\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u7F16\u5199\u66F4\u5C11\u7684\u4EE3\u7801\u6765\u5B9A\u4E49\u5E76\u521D\u59CB\u5316\u7C7B\u5C5E\u6027\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token keyword">protected</span> <span class="token keyword type-declaration">string</span> <span class="token variable">$name</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">Plan</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token keyword">protected</span> <span class="token keyword type-declaration">string</span> <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;monthly&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">Signup</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span>  <span class="token class-name">User</span>  <span class="token parameter">$user</span>
     * <span class="token keyword">@param</span>  <span class="token class-name">Plan</span>  <span class="token parameter">$plan</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span>
        <span class="token keyword">protected</span> <span class="token class-name type-declaration">User</span> <span class="token variable">$user</span><span class="token punctuation">,</span>
        <span class="token keyword">protected</span> <span class="token class-name type-declaration">Plan</span> <span class="token variable">$plan</span>
    <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token variable">$user</span>   <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;jone_doe&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$plan</span>   <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Plan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$signup</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Signup</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$plan</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$signup</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><blockquote><p>\u5728\u7C7B\u7684\u6784\u9020\u51FD\u6570\u4E2D\u53EF\u4EE5\u521D\u59CB\u5316\u7C7B\u5C5E\u6027\u7C7B\u578B\uFF0C\u5C5E\u6027\u7684\u53EF\u8BBF\u95EE\u6027\uFF0C\u4EE5\u53CA\u8D4B\u9ED8\u8BA4\u503C\u3002</p></blockquote>`,3),j={id:"\u5141\u8BB8\u5BF9\u8C61\u7684-class",tabindex:"-1"},M=n("a",{class:"header-anchor",href:"#\u5141\u8BB8\u5BF9\u8C61\u7684-class","aria-hidden":"true"},"#",-1),A=s(),I={href:"https://wiki.php.net/rfc/class_name_literal_on_object",target:"_blank",rel:"noopener noreferrer"},S=s("\u5141\u8BB8\u5BF9\u8C61\u7684 "),H=n("code",null,"::class",-1),V=e(`<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">Conversation</span>
<span class="token punctuation">{</span>
    <span class="token comment">//</span>
<span class="token punctuation">}</span>

<span class="token variable">$object</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Conversation</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$object</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token function">get_class</span><span class="token punctuation">(</span><span class="token variable">$object</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Conversation&quot; &quot;Conversation&quot;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>\u5728\u8BED\u6CD5\u4E0A\u7C7B\u4F3C\u4E8E\u7C7B\u5E38\u91CF\u8BBF\u95EE\uFF0C\u66F4\u52A0\u76F4\u89C2\u5730\u671F\u671B\u8BED\u6CD5 <code>$object::class</code> \u4E5F\u80FD\u6B63\u5E38\u5DE5\u4F5C\u5E76\u63D0\u4F9B\u4E0E <code>get_class($object)</code> \u76F8\u540C\u7684\u7ED3\u679C\u3002</p></blockquote>`,2),z={id:"\u547D\u540D\u53C2\u6570",tabindex:"-1"},F=n("a",{class:"header-anchor",href:"#\u547D\u540D\u53C2\u6570","aria-hidden":"true"},"#",-1),N=s(),T={href:"https://www.php.net/releases/8.0/zh.php#named-arguments",target:"_blank",rel:"noopener noreferrer"},W=s("\u547D\u540D\u53C2\u6570"),B=e(`<p>\u8FD9\u4E2A\u65B0\u7684 PHP 8 \u7279\u6027\u5141\u8BB8\u60A8\u6839\u636E\u53C2\u6570\u540D\u79F0\u4F20\u9012\u51FD\u6570\u53C2\u6570\uFF0C\u800C\u4E0D\u662F\u5B83\u4EEC\u7684\u987A\u5E8F\u3002</p><ul><li>\u4EC5\u4EC5\u6307\u5B9A\u5FC5\u586B\u53C2\u6570\uFF0C\u8DF3\u8FC7\u53EF\u9009\u53C2\u6570\u3002</li><li>\u53C2\u6570\u7684\u987A\u5E8F\u65E0\u5173\u3001\u81EA\u5DF1\u5C31\u662F\u6587\u6863\uFF08self-documented\uFF09</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>


<span class="token keyword">class</span> <span class="token class-name-definition class-name">Invoice</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span>
        <span class="token keyword">private</span> <span class="token variable">$description</span><span class="token punctuation">,</span>
        <span class="token keyword">private</span> <span class="token variable">$total</span><span class="token punctuation">,</span>
        <span class="token keyword">private</span> <span class="token variable">$date</span><span class="token punctuation">,</span>
        <span class="token keyword">private</span> <span class="token variable">$paid</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token variable">$invoice</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Invoice</span><span class="token punctuation">(</span>
    <span class="token argument-name">description</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;Customer installation&#39;</span><span class="token punctuation">,</span>
    <span class="token argument-name">total</span><span class="token punctuation">:</span> <span class="token number">10000</span><span class="token punctuation">,</span>
    <span class="token argument-name">date</span><span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">DateTime</span><span class="token punctuation">,</span>
    <span class="token argument-name">paid</span><span class="token punctuation">:</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$invoice</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><blockquote><p>\u547D\u540D\u53C2\u6570\u6709\u4E00\u4E2A\u95EE\u9898\u662F\u5F53\u6211\u4EEC\u4FEE\u6539\u4E86\u51FD\u6570\u547D\u540D\u7684\u65F6\u5019\uFF0C\u5219\u5728\u8C03\u7528\u51FD\u6570\u7684\u65F6\u5019\u7684\u547D\u540D\u53C2\u6570\u4E5F\u9700\u8981\u4E00\u540C\u4F5C\u4FEE\u6539\uFF0C\u5426\u5219\u4F1A\u629B\u51FA\uFF1A<code>Uncaught Error: Unknown named parameter</code> \u7684\u9519\u8BEF</p></blockquote><h2 id="\u65B0\u7684\u5185\u5EFA\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u65B0\u7684\u5185\u5EFA\u51FD\u6570" aria-hidden="true">#</a> \u65B0\u7684\u5185\u5EFA\u51FD\u6570</h2>`,5),R={id:"\u5B57\u7B26\u4E32-str-starts-with-\u3001-str-ends-with-\u3001str-contains-\u51FD\u6570",tabindex:"-1"},D=n("a",{class:"header-anchor",href:"#\u5B57\u7B26\u4E32-str-starts-with-\u3001-str-ends-with-\u3001str-contains-\u51FD\u6570","aria-hidden":"true"},"#",-1),L=s(" \u5B57\u7B26\u4E32 "),Y={href:"https://wiki.php.net/rfc/add_str_starts_with_and_ends_with_functions",target:"_blank",rel:"noopener noreferrer"},G=s("str_starts_with()"),J=s("\u3001 "),K={href:"https://wiki.php.net/rfc/str_contains",target:"_blank",rel:"noopener noreferrer"},O=s("str_ends_with()"),Q=s("\u3001"),X={href:"https://wiki.php.net/rfc/add_str_starts_with_and_ends_with_functions",target:"_blank",rel:"noopener noreferrer"},Z=s("str_contains()"),nn=s(" \u51FD\u6570"),sn=e(`<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token comment"># str_starts_with</span>

<span class="token variable">$id</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;inv_asdasdasdasdasdasd&#39;</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">str_starts_with</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;inv_&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token comment"># str_ends_with</span>
<span class="token variable">$id</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;asdasdasdasdasdasd_payment&#39;</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">str_ends_with</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;_payment&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token comment"># str_contains</span>
<span class="token variable">$url</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;https://example.com?foo=bar&#39;</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">str_contains</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;?&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,1),an={id:"get-debug-type-\u51FD\u6570",tabindex:"-1"},pn=n("a",{class:"header-anchor",href:"#get-debug-type-\u51FD\u6570","aria-hidden":"true"},"#",-1),en=s(),tn={href:"https://wiki.php.net/rfc/get_debug_type",target:"_blank",rel:"noopener noreferrer"},on=s("get_debug_type \u51FD\u6570"),cn=e(`<p><code>get_debug_type</code> \u51FD\u6570\u8FD4\u56DE\u7ED9\u5B9A\u53D8\u91CF\u7684\u6570\u636E\u7C7B\u578B\u3002 \u4E0B\u9762\u662F\u8DDF <code>gettype</code> \u51FD\u6570\u8FD4\u56DE\u7684\u6570\u636E\u7C7B\u578B\u5BF9\u6BD4\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token comment">// \u5B57\u7B26\u4E32</span>
<span class="token variable">$string</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;I am a string&#39;</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">get_debug_type</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string(6) &quot;string&quot; \u3001string(6) &quot;string&quot;</span>

<span class="token comment">// \u6574\u578B</span>
<span class="token variable">$int</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">get_debug_type</span><span class="token punctuation">(</span><span class="token variable">$int</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">gettype</span><span class="token punctuation">(</span><span class="token variable">$int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string(3) &quot;int&quot; \u3001string(7) &quot;integer&quot;</span>

<span class="token comment">// \u6D6E\u70B9\u578B</span>
<span class="token variable">$float</span> <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">get_debug_type</span><span class="token punctuation">(</span><span class="token variable">$float</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">gettype</span><span class="token punctuation">(</span><span class="token variable">$float</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string(5) &quot;float&quot; \u3001string(6) &quot;double&quot;</span>

<span class="token comment">// \u6570\u7EC4</span>
<span class="token variable">$array</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">get_debug_type</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">gettype</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string(5) &quot;array&quot; \u3001string(5) &quot;array&quot;</span>

<span class="token comment">// \u5BF9\u8C61</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token variable">$object</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">get_debug_type</span><span class="token punctuation">(</span><span class="token variable">$object</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">gettype</span><span class="token punctuation">(</span><span class="token variable">$object</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string(4) &quot;User&quot; \u3001string(6) &quot;object&quot;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,2),ln={id:"weak-map-\u7C7B",tabindex:"-1"},rn=n("a",{class:"header-anchor",href:"#weak-map-\u7C7B","aria-hidden":"true"},"#",-1),un=s(),kn={href:"https://wiki.php.net/rfc/weak_maps",target:"_blank",rel:"noopener noreferrer"},bn=s("Weak Map \u7C7B"),dn=e(`<p>Weak map \u5141\u8BB8\u5B58\u50A8\u94FE\u63A5\u5230\u5BF9\u8C61\u7684\u4EFB\u610F\u6570\u636E\uFF0C\u800C\u4E0D\u4F1A\u6CC4\u6F0F\u4EFB\u4F55\u5185\u5B58\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token variable">$map</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$user</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$map</span><span class="token punctuation">[</span><span class="token variable">$user</span><span class="token punctuation">]</span>  <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$map</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int(1)</span>

<span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$map</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int(0)</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,2),mn={href:"https://php.watch/versions/8.0/weakmap",target:"_blank",rel:"noopener noreferrer"},hn=s("\u66F4\u591A\u76F8\u5173\u67E5\u770B\u8FD9\u91CC"),_n={id:"\u8054\u5408\u7C7B\u578B",tabindex:"-1"},gn=n("a",{class:"header-anchor",href:"#\u8054\u5408\u7C7B\u578B","aria-hidden":"true"},"#",-1),vn=s(),wn={href:"https://www.php.net/releases/8.0/zh.php#union-types",target:"_blank",rel:"noopener noreferrer"},fn=s("\u8054\u5408\u7C7B\u578B"),yn=e(`<p>\u76F8\u8F83\u4E8E\u4EE5\u524D\u7684 PHPDoc \u58F0\u660E\u7C7B\u578B\u7684\u7EC4\u5408\uFF0C\u73B0\u5728\u53EF\u4EE5\u7528\u539F\u751F\u652F\u6301\u7684\u8054\u5408\u7C7B\u578B\u58F0\u660E\u53D6\u800C\u4EE3\u4E4B\uFF0C\u5E76\u5728\u8FD0\u884C\u65F6\u5F97\u5230\u6821\u9A8C\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token class-name">User</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span> <span class="token variable">$user</span><span class="token punctuation">;</span> <span class="token comment">// \u53EF\u4EE5\u5728\u5B9A\u4E49\u7C7B\u5C5E\u6027\u65F6\u5B9A\u4E49\u5BF9\u5E94\u5C5E\u6027\u7C7B\u578B\u4E3A\u8054\u5408\u7C7B\u578B</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">makeFriendsWith</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span> <span class="token variable">$user</span><span class="token punctuation">)</span> <span class="token comment">// \u8054\u5408\u7C7B\u578B\u58F0\u660E,\u5728php8\u4E4B\u524D\u4E0D\u5141\u8BB8\u8FD9\u6837\u5B9A\u4E49\u53C2\u6570\u7C7B\u578B</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">user</span> <span class="token operator">=</span> <span class="token variable">$user</span><span class="token punctuation">;</span>
        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Yay friends&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getFriends</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token operator">?</span><span class="token class-name return-type">User</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">user</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token variable">$joe</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">;</span>
<span class="token variable">$sam</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">;</span>

<span class="token variable">$joe</span><span class="token operator">-&gt;</span><span class="token function">makeFriendsWith</span><span class="token punctuation">(</span><span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>`,2),$n={id:"attributes-\u6CE8\u89E3",tabindex:"-1"},qn=n("a",{class:"header-anchor",href:"#attributes-\u6CE8\u89E3","aria-hidden":"true"},"#",-1),xn=s(),Pn={href:"https://www.php.net/manual/zh/language.attributes.overview.php",target:"_blank",rel:"noopener noreferrer"},Un=s("Attributes \u6CE8\u89E3"),Cn=n("p",null,"\u6CE8\u89E3\u529F\u80FD\u63D0\u4F9B\u4E86\u4EE3\u7801\u4E2D\u7684\u58F0\u660E\u90E8\u5206\u90FD\u53EF\u4EE5\u6DFB\u52A0\u7ED3\u6784\u5316\u3001\u673A\u5668\u53EF\u8BFB\u7684\u5143\u6570\u636E\u7684\u80FD\u529B\uFF0C \u6CE8\u89E3\u7684\u76EE\u6807\u53EF\u4EE5\u662F\u7C7B\u3001\u65B9\u6CD5\u3001\u51FD\u6570\u3001\u53C2\u6570\u3001\u5C5E\u6027\u3001\u7C7B\u5E38\u91CF\u3002",-1),En=s("\u901A\u8FC7 "),jn={href:"https://www.php.net/manual/zh/book.reflection.php",target:"_blank",rel:"noopener noreferrer"},Mn=s("\u53CD\u5C04 API"),An=s(" \u53EF\u5728\u8FD0\u884C\u65F6\u83B7\u53D6\u6CE8\u89E3\u6240\u5B9A\u4E49\u7684\u5143\u6570\u636E\u3002"),In=e(`<p>\u56E0\u6B64\u6CE8\u89E3\u53EF\u4EE5\u6210\u4E3A\u76F4\u63A5\u5D4C\u5165\u4EE3\u7801\u7684\u914D\u7F6E\u5F0F\u8BED\u8A00\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">Attribute</span></span><span class="token delimiter punctuation">]</span></span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">ApplyMiddleware</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token keyword">private</span> <span class="token keyword type-declaration">string</span> <span class="token variable">$middleware</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">string</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">middleware</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">ApplyMiddleware</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;class&#39;</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">]</span></span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">MyController</span>
<span class="token punctuation">{</span>
    <span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">ApplyMiddleware</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;property&#39;</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">]</span></span>
    <span class="token keyword">protected</span> <span class="token variable">$myProperty</span><span class="token punctuation">;</span>


    <span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">ApplyMiddleware</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;method&#39;</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">]</span></span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token variable">$controller</span>      <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyController</span><span class="token punctuation">;</span>
<span class="token variable">$reflectionClass</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReflectionClass</span><span class="token punctuation">(</span><span class="token variable">$controller</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7C7B</span>
<span class="token variable">$attributes</span>      <span class="token operator">=</span> <span class="token variable">$reflectionClass</span><span class="token operator">-&gt;</span><span class="token function">getAttributes</span><span class="token punctuation">(</span><span class="token class-name static-context">ApplyMiddleware</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$middleware</span>      <span class="token operator">=</span> <span class="token variable">$attributes</span><span class="token punctuation">[</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token operator">?-&gt;</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$middleware</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string(5) &quot;class&quot;</span>

<span class="token comment">// \u65B9\u6CD5</span>
<span class="token variable">$attributes</span>      <span class="token operator">=</span> <span class="token variable">$reflectionClass</span><span class="token operator">-&gt;</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;index&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$middleware</span> <span class="token operator">=</span> <span class="token variable">$attributes</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">?-&gt;</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$middleware</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string(6) &quot;method&quot;</span>

<span class="token comment">// \u5C5E\u6027</span>
<span class="token variable">$attributes</span> <span class="token operator">=</span> <span class="token variable">$reflectionClass</span><span class="token operator">-&gt;</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;myProperty&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$middleware</span> <span class="token operator">=</span> <span class="token variable">$attributes</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">?-&gt;</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$middleware</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string(8) &quot;property&quot;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div>`,2),Sn={id:"throw-\u4F5C\u4E3A\u8868\u8FBE\u5F0F",tabindex:"-1"},Hn=n("a",{class:"header-anchor",href:"#throw-\u4F5C\u4E3A\u8868\u8FBE\u5F0F","aria-hidden":"true"},"#",-1),Vn=s(),zn={href:"https://wiki.php.net/rfc/throw_expression",target:"_blank",rel:"noopener noreferrer"},Fn=s("throw \u4F5C\u4E3A\u8868\u8FBE\u5F0F"),Nn=e(`<p>\u5141\u8BB8\u5728\u63A5\u53D7\u8868\u8FBE\u5F0F\u7684\u4EFB\u4F55\u4E0A\u4E0B\u6587\u4E2D\u4F7F\u7528 <code>throw</code> \u5173\u952E\u5B57\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token comment">// callable</span>
<span class="token variable">$callable</span> <span class="token operator">=</span> <span class="token keyword">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// $value \u7684\u503C\u4EC5\u4E0D\u4E3Anull</span>
<span class="token variable">$value</span> <span class="token operator">=</span> <span class="token variable">$nullableVariable</span> <span class="token operator">??</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// $value \u7684\u503C\u4EC5\u4E3Atrue</span>
<span class="token variable">$value</span> <span class="token operator">=</span> <span class="token variable">$falsableValue</span> <span class="token operator">?</span><span class="token punctuation">:</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8DDF\u4F7F\u7528if\u8868\u8FBE\u5F0F\u4E00\u6837\uFF0C\u8BA9\u4EE3\u7801\u53D8\u5F97\u7B80\u6D01</span>
<span class="token variable">$condition</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$condition</span> <span class="token operator">||</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$condition</span> <span class="token keyword">and</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$condition</span> <span class="token keyword">or</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,2),Tn={id:"\u65E0\u53D8\u91CF\u6355\u6349",tabindex:"-1"},Wn=n("a",{class:"header-anchor",href:"#\u65E0\u53D8\u91CF\u6355\u6349","aria-hidden":"true"},"#",-1),Bn=s(),Rn={href:"https://php.watch/versions/8.0/catch-exception-type",target:"_blank",rel:"noopener noreferrer"},Dn=s("\u65E0\u53D8\u91CF\u6355\u6349"),Ln=e(`<p>PHP 8.0 \u53CA\u66F4\u9AD8\u7248\u672C\u5141\u8BB8\u4F7F\u7528 try/catch \u5757\uFF0C\u5176\u4E2D catch() \u8BED\u53E5\u4E0D\u4F1A\u5C06\u5F02\u5E38\u672C\u8EAB\u6355\u83B7\u5230\u53D8\u91CF\u4E2D\u3002</p><p>\u5728 PHP 8.0 \u4E4B\u524D\uFF0C\u5178\u578B\u7684 PHP try/catch \u5757\u5FC5\u987B\u5728 catch \u8BED\u53E5\u4E2D\u6355\u83B7\u5F02\u5E38\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token comment">// try something</span>
<span class="token punctuation">}</span>
<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>InvalidArgumentException</span> <span class="token variable">$ex</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// &quot;$ex&quot; is required</span>
  <span class="token comment">// handle the exception</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line">\xA0</div><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u6709\u65F6\uFF0C\u5F02\u5E38\u7C7B\u578B\uFF08\u5982<code>\\InvalidArgumentException</code>\uFF09\u8DB3\u4EE5\u51B3\u5B9A\u5F02\u5E38\u7684\u5904\u7406\u65B9\u5F0F\uFF0C\u5E76\u5C06\u5F02\u5E38\u6355\u83B7\u5230\u4E00\u4E2A\u53D8\u91CF\u4E2D\uFF08\u5982\u4E0A\u4F8B\u4E2D\u7684$ex\uFF09\uFF0CPHP 8.0 \u5141\u8BB8\u5220\u9664\u5F02\u5E38\u6355\u83B7\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InvalidArgumentException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Something went wrong.&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line">\xA0</div><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u786E\u4FDD\u5728\u7A0B\u5E8F\u4E2D\u6355\u83B7\u7684\u5F02\u5E38\u7C7B\u578B\u7684\u7C92\u5EA6\u8DB3\u4EE5\u4F20\u8FBE\u5F02\u5E38\u7684\u542B\u4E49\u3002 \u4F8B\u5982\uFF0C\u5982\u679C\u6253\u7B97\u8BB0\u5F55\u4E8B\u4EF6\uFF0C\u5219\u5728\u4E0D\u6355\u83B7\u5F02\u5E38\u7684\u60C5\u51B5\u4E0B\u6355\u83B7\u901A\u914D\u7B26 <code>\\Exception</code> \u6216 <code>\\Throwable</code> \u53EF\u80FD\u4E0D\u662F\u4E00\u4E2A\u597D\u4E60\u60EF\u3002</p>`,6),Yn={id:"\u65B0\u7684\u6DF7\u5408\u4F2A\u7C7B\u578B",tabindex:"-1"},Gn=n("a",{class:"header-anchor",href:"#\u65B0\u7684\u6DF7\u5408\u4F2A\u7C7B\u578B","aria-hidden":"true"},"#",-1),Jn=s(),Kn={href:"https://php.watch/versions/8.0/mixed-type",target:"_blank",rel:"noopener noreferrer"},On=s("\u65B0\u7684\u6DF7\u5408\u4F2A\u7C7B\u578B"),Qn=e(`<p>\u5F53\u51FD\u6570\u7684\u53C2\u6570\u548C\u8FD4\u56DE\u503C\u6CA1\u6709\u5B9A\u4E49\u65F6\uFF0C\u9ED8\u8BA4\u4E3A <code>mixed</code> \u7C7B\u578B\u7684\u8FD4\u56DE\u503C\u3002</p><p><code>mixed</code> \u7B49\u540C\u4E8E\u8054\u5408\u7C7B\u578B <code>string|int|float|bool|null|array|object|callable|resource</code></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">dump</span><span class="token punctuation">(</span><span class="token keyword type-hint">mixed</span> <span class="token variable">$var</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">dump</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><div class="highlight-line">\xA0</div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p>\u6CE8\u610F\uFF1A<code>mixed</code> \u4E0D\u80FD\u8DDF\u5176\u4ED6\u7C7B\u578B\u4E00\u8D77\u7EC4\u5408\u6210\u8054\u5408\u7C7B\u578B\u3002\u4F8B\u5982\uFF1A<code>function (mixed|FooClass $bar): int|mixed {}</code> \u4F1A\u629B\u51FA\u9519\u8BEF\uFF1A<code>Fatal error: Type mixed can only be used as a standalone type in ... on line ...</code></p></blockquote>`,4),Xn={id:"\u65B0-stringable-\u63A5\u53E3",tabindex:"-1"},Zn=n("a",{class:"header-anchor",href:"#\u65B0-stringable-\u63A5\u53E3","aria-hidden":"true"},"#",-1),ns=s(),ss={href:"https://php.watch/versions/8.0/stringable",target:"_blank",rel:"noopener noreferrer"},as=s("\u65B0 Stringable \u63A5\u53E3"),ps=e(`<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">string</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;The username&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">passString</span><span class="token punctuation">(</span><span class="token keyword type-declaration">string</span><span class="token operator">|</span><span class="token class-name">Stringable</span> <span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token operator">|</span><span class="token class-name">Stringable</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$string</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// string(12) &quot;The username&quot;</span>
    <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">Stringable</span><span class="token punctuation">,</span> <span class="token comment">// bool(true) </span>
    <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">passString</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">)</span> <span class="token comment">// object(User)#2 (0) {}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,1),es={id:"\u5C3E\u968F\u9017\u53F7",tabindex:"-1"},ts=n("a",{class:"header-anchor",href:"#\u5C3E\u968F\u9017\u53F7","aria-hidden":"true"},"#",-1),os=s(),cs={href:"https://php.watch/versions/8.0/trailing-comma-parameter-use-list",target:"_blank",rel:"noopener noreferrer"},ls=s("\u5C3E\u968F\u9017\u53F7"),rs=e(`<p>PHP 8.0 \u8BED\u6CD5\u5141\u8BB8\u5728\u53C2\u6570\u5217\u8868\u548C\u95ED\u5305\u4F7F\u7528\u5217\u8868\u4E2D\u7559\u4E0B\u5C3E\u968F\u9017\u53F7\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span>
        <span class="token keyword">public</span> <span class="token keyword type-declaration">string</span> <span class="token variable">$name</span><span class="token punctuation">,</span>
        <span class="token keyword">protected</span> <span class="token keyword type-declaration">int</span> <span class="token variable">$age</span><span class="token punctuation">,</span>
        <span class="token keyword">private</span> <span class="token keyword type-declaration">string</span> <span class="token variable">$email</span><span class="token punctuation">,</span>
        <span class="token keyword">public</span> <span class="token keyword type-declaration">bool</span> <span class="token variable">$is_admin</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token variable">$user</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span>
    <span class="token string single-quoted-string">&#39;Curder&#39;</span><span class="token punctuation">,</span>
    <span class="token number">30</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;q.curder@gmail.com&#39;</span><span class="token punctuation">,</span>
    <span class="token constant boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$foo</span><span class="token punctuation">,</span> <span class="token variable">$bar</span><span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</span></code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,2),is={id:"valueerror-\u9519\u8BEF\u7C7B\u578B",tabindex:"-1"},us=n("a",{class:"header-anchor",href:"#valueerror-\u9519\u8BEF\u7C7B\u578B","aria-hidden":"true"},"#",-1),ks=s(),bs={href:"https://php.watch/versions/8.0/ValueError",target:"_blank",rel:"noopener noreferrer"},ds=s("ValueError \u9519\u8BEF\u7C7B\u578B"),ms=e(`<p>PHP 8 \u5F15\u5165\u4E86\u4E00\u79CD\u79F0\u4E3A <code>ValueError</code> \u7684\u65B0\u578B\u5F02\u5E38\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token variable">$random_element</span> <span class="token operator">=</span> <span class="token function">array_rand</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u51FD\u6570\u4F20\u9012\u9519\u8BEF\u7684\u53C2\u6570</span>
    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$random_element</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ValueError</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Something went error</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line">\xA0</div><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,2);function hs(_s,gs){const a=o("ExternalLinkIcon");return c(),l(r,null,[u,n("h2",k,[b,d,n("a",m,[h,p(a)])]),_,n("h2",g,[v,w,n("a",f,[y,p(a)])]),$,n("h2",q,[x,P,n("a",U,[C,p(a)])]),E,n("h2",j,[M,A,n("a",I,[S,H,p(a)])]),V,n("h2",z,[F,N,n("a",T,[W,p(a)])]),B,n("h3",R,[D,L,n("a",Y,[G,p(a)]),J,n("a",K,[O,p(a)]),Q,n("a",X,[Z,p(a)]),nn]),sn,n("h3",an,[pn,en,n("a",tn,[on,p(a)])]),cn,n("h2",ln,[rn,un,n("a",kn,[bn,p(a)])]),dn,n("p",null,[n("a",mn,[hn,p(a)])]),n("h2",_n,[gn,vn,n("a",wn,[fn,p(a)])]),yn,n("h2",$n,[qn,xn,n("a",Pn,[Un,p(a)])]),Cn,n("p",null,[En,n("a",jn,[Mn,p(a)]),An]),In,n("h2",Sn,[Hn,Vn,n("a",zn,[Fn,p(a)])]),Nn,n("h2",Tn,[Wn,Bn,n("a",Rn,[Dn,p(a)])]),Ln,n("h2",Yn,[Gn,Jn,n("a",Kn,[On,p(a)])]),Qn,n("h2",Xn,[Zn,ns,n("a",ss,[as,p(a)])]),ps,n("h2",es,[ts,os,n("a",cs,[ls,p(a)])]),rs,n("h2",is,[us,ks,n("a",bs,[ds,p(a)])]),ms],64)}var ws=t(i,[["render",hs],["__file","index.html.vue"]]);export{ws as default};
